{% extends "layout.njk" %}

{% block title %}Voluntariados - Solidarity{% endblock %}

{% block head %}
  {{ super() }}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">
  <style>
    :root {
      --primary: #4a6fa5;
      --primary-dark: #166088;
      --gray: #e2e8f0;
      --white: #fff;
      --accent: #4fc3a1;
      --accent-dark: #3da58a;
      --urgent: #e53e3e;
      --gold: #eab308;
      --bronze: #cd7f32;
      --radius: 12px;
    }
    .main-container { max-width: 1200px; margin: 2rem auto; padding: 0 2rem; }
    .volunteering-intro {
      background: linear-gradient(135deg, #f0f9ff 0%, #e6f0fa 100%);
      border-radius: var(--radius); padding: 2rem; margin-bottom: 2rem; border: 1px solid var(--gray);
    }
    .volunteering-intro h2 {
      font-size: 1.25rem !important;
      color: var(--primary-dark);
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.8rem;
    }
    .volunteering-intro h2 i { color: var(--accent); }
    .volunteering-intro p { color: #4a6fa5; font-size: 1.1rem; line-height: 1.6; }
    .volunteering-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem; }
    .volunteering-header h1 { font-size: 2rem; color: var(--primary); font-weight: 700; }
    .volunteering-actions .btn { border-radius: var(--radius); }
    .volunteering-search { margin-bottom: 1.5rem; position: relative; width: 100%; max-width: none; }
    .volunteering-search input { width: 100%; padding-right: 2.5rem; border-radius: var(--radius); border: 1.5px solid var(--gray); font-size: 1.1rem; height: 48px; }
    .volunteering-search i { position: absolute; right: 1rem; top: 50%; transform: translateY(-50%); pointer-events: none; }
    .tabs { display: flex; border-bottom: 1px solid var(--gray); margin-bottom: 2rem; flex-wrap: wrap; }
    .tab { padding: 0.75rem 1.5rem; cursor: pointer; position: relative; font-weight: 500; color: #6b7280; background: none; border: none; outline: none; white-space: nowrap; border-radius: var(--radius) var(--radius) 0 0; }
    .tab.active { color: var(--primary); font-weight: 600; background: #f0f9ff; }
    .tab.active::after { content: ''; position: absolute; bottom: -1px; left: 0; width: 100%; height: 3px; background: var(--primary); }
    .volunteering-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 2rem; }
    .volunteering-card { background: white; border-radius: var(--radius); overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.05); border: 1px solid var(--gray); transition: all 0.3s ease; display: flex; flex-direction: column; position: relative; }
    .volunteering-card:hover { transform: translateY(-5px); box-shadow: 0 10px 25px rgba(0,0,0,0.1); }
    .volunteering-image { height: 180px; overflow: hidden; position: relative; }
    .volunteering-image img { width: 100%; height: 100%; object-fit: cover; transition: transform 0.3s ease; }
    .volunteering-card:hover .volunteering-image img { transform: scale(1.05); }
    .volunteering-badge { position: absolute; top: 1rem; right: 1rem; background: rgba(255,255,255,0.9); padding: 0.3rem 0.8rem; border-radius: 50px; font-size: 0.8rem; font-weight: 600; display: flex; align-items: center; gap: 0.5rem; box-shadow: 0 2px 5px rgba(0,0,0,0.1); z-index: 2; }
    .volunteering-badge.urgent { background: var(--urgent); color: white; }
    .volunteering-badge.points { background: var(--primary); color: white; left: 1rem; right: auto; }
    .volunteering-content { padding: 1.5rem; display: flex; flex-direction: column; flex: 1; }
    .volunteering-content h3 { font-size: 1.3rem; margin-bottom: 0.8rem; color: #2d3748; }
    .volunteering-content p { color: #6b7280; margin-bottom: 1.5rem; font-size: 0.95rem; line-height: 1.6; flex-grow: 1; }
    .volunteering-meta { display: flex; gap: 1rem; margin-bottom: 1.5rem; font-size: 0.85rem; flex-wrap: wrap; }
    .meta-item { display: flex; align-items: center; gap: 0.5rem; color: #6b7280; }
    .meta-item i { color: var(--primary); }
    .linked-cause { display: inline-flex; align-items: center; background: #f0f0ff; color: var(--primary); padding: 0.3rem 0.8rem; border-radius: 50px; font-size: 0.85rem; font-weight: 600; margin-bottom: 1rem; }
    .volunteering-progress { margin-bottom: 1.5rem; }
    .progress-bar { height: 8px; background: var(--gray); border-radius: 4px; overflow: hidden; margin-bottom: 0.5rem; }
    .progress-fill { height: 100%; background: var(--primary); border-radius: 4px; }
    .progress-info { display: flex; justify-content: space-between; font-size: 0.9rem; color: #6b7280; }
    .volunteering-actions { display: flex; gap: 0.8rem; }
    .volunteering-actions .btn { flex: 1; text-align: center; justify-content: center; border-radius: var(--radius); }
    .modal-bg { display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.35); z-index: 9999; align-items: center; justify-content: center; }
    .modal-bg.active { display: flex; }
    .modal-content { background: #fff; border-radius: var(--radius); max-width: 540px; width: 95vw; padding: 2.5rem 1.5rem 2rem 1.5rem; box-shadow: 0 8px 32px rgba(0,0,0,0.13); position: relative; animation: fadeIn 0.3s; max-height: 90vh; overflow-y: auto; }
    .close-modal { position: absolute; top: 1.1rem; right: 1.3rem; background: none; border: none; font-size: 2rem; color: #aaa; cursor: pointer; transition: color 0.2s; border-radius: 50%; }
    .close-modal:hover { color: var(--primary); background: #f0f9ff; }
    .create-task-title { font-size: 1.5rem; font-weight: 800; color: var(--primary); margin-bottom: 1.2rem; text-align: center; }
    .task-form .form-group label { font-weight: 600; color: var(--primary); margin-bottom: 0.5rem; display: block; }
    .task-form .form-group input, .task-form .form-group textarea, .task-form .form-group select { width: 100%; padding: 0.7rem 1rem; border-radius: var(--radius); border: 1px solid #e5e7eb; margin-bottom: 0.2rem; font-size: 1rem; background: #f8fafc; transition: border 0.2s; }
    .task-form .form-group input:focus, .task-form .form-group textarea:focus, .task-form .form-group select:focus { border: 1.5px solid var(--accent); outline: none; background: #fff; }
    .task-form .form-group textarea { min-height: 90px; resize: vertical; }
    .form-inline-group { display: flex; gap: 1rem; }
    .form-inline-group .form-group { flex: 1; }
    .preview-img { width: 100%; max-width: 320px; height: 180px; object-fit: cover; border-radius: var(--radius); margin-top: 0.5rem; border: 1px solid #e5e7eb; display: none; }
    .points-info { background: var(--accent); color: #fff; border-radius: var(--radius); padding: 0.7rem 1rem; margin-top: 0.5rem; font-size: 1.05rem; display: flex; align-items: center; gap: 0.7rem; }
    .after-create { margin-top: 2rem; background: var(--primary-light); color: #444; border-radius: var(--radius); padding: 1.5rem 1rem; text-align: center; }
    @keyframes fadeIn { from { opacity: 0; transform: translateY(-30px);} to { opacity: 1; transform: translateY(0);} }
    .btn { padding: 0.8rem 1.5rem; border-radius: var(--radius); font-weight: 600; cursor: pointer; transition: all 0.2s; border: none; display: inline-flex; align-items: center; justify-content: center; gap: 0.5rem; }
    .btn-primary { background: var(--primary); color: white; }
    .btn-primary:hover { background: var(--primary-dark); transform: translateY(-2px); }
    .btn-accent { background: var(--accent); color: white; }
    .btn-accent:hover { background: var(--accent-dark); transform: translateY(-2px); }
    .btn-outline { background: transparent; color: var(--primary); border: 1px solid var(--primary); }
    .btn-outline:hover { background: rgba(74, 111, 165, 0.1); transform: translateY(-2px); }
    .btn-secondary { background: #f0f9ff; color: var(--primary); border: 1px solid var(--primary); }
    .btn-secondary:hover { background: #e6f0fa; }
    button,
    .btn,
    .btn-primary,
    .btn-accent,
    .btn-outline,
    .btn-secondary,
    .modal-content button,
    .volunteering-actions .btn,
    .task-actions .btn {
      border-radius: 2rem !important;
    }
    @media (max-width: 768px) {
      .volunteering-header { flex-direction: column; align-items: flex-start; gap: 1rem; }
      .volunteering-grid { grid-template-columns: 1fr; }
      .volunteering-actions { flex-direction: column; }
      .volunteering-search { max-width: 100%; }
    }
    .form-group.urgent-group {
      display: flex;
      align-items: center;
      gap: 0.7rem;
      margin-bottom: 0;
    }
    /* --- MOBILE ONLY: Mejor experiencia m√≥vil, sin afectar escritorio --- */
    @media (max-width: 600px) {
      html, body {
        max-width: 100vw !important;
        overflow-x: hidden !important;
      }
      .main-container {
        padding-left: 0.3rem !important;
        padding-right: 0.3rem !important;
        max-width: 100vw !important;
        box-sizing: border-box;
      }
      .volunteering-intro {
        padding: 1rem !important;
        margin-bottom: 1.5rem !important;
        border-radius: 10px !important;
      }
      .volunteering-header {
        flex-direction: column !important;
        align-items: center !important;
        gap: 0.7rem !important;
        margin-bottom: 1.2rem !important;
      }
      .volunteering-header h1 {
        font-size: 1.2rem !important;
        text-align: center !important;
        width: 100%;
        margin: 0 auto 0.5rem auto !important;
      }
      .volunteering-actions {
        width: 100%;
        display: flex;
        justify-content: center !important;
      }
      .volunteering-actions .btn {
        font-size: 0.97rem !important;
        padding: 0.6rem 1.2rem !important;
        margin: 0 auto !important;
        display: block !important;
        width: auto !important;
      }
      .volunteering-intro-content {
        margin-top: 1.2rem !important;
      }
      /* Elimina tabs en m√≥vil */
      .tabs {
        display: none !important;
      }
      .volunteering-search {
        margin-bottom: 1.2rem !important;
        width: 100% !important;
        max-width: 100vw !important;
      }
      .volunteering-search input {
        font-size: 0.97rem !important;
        padding: 0.5rem 0.7rem !important;
        height: 40px !important;
        width: 100% !important;
      }
      .volunteering-grid {
        grid-template-columns: 1fr !important;
        gap: 1.2rem !important;
      }
      .volunteering-card {
        border-radius: 9px !important;
        min-width: 0 !important;
      }
      .volunteering-image {
        height: 170px !important;
      }
      .volunteering-content {
        padding: 0.7rem !important;
      }
      .volunteering-content h3 {
        font-size: 1.05rem !important;
      }
      .volunteering-content p {
        font-size: 0.93rem !important;
      }
      .volunteering-meta {
        gap: 0.5rem !important;
        font-size: 0.82rem !important;
      }
      .linked-cause {
        font-size: 0.82rem !important;
      }
      .volunteering-actions {
        flex-direction: column !important;
        gap: 0.5rem !important;
      }
      .btn, .btn-accent, .btn-primary, .btn-outline {
        font-size: 0.97rem !important;
        padding: 0.6rem 0.7rem !important;
      }
      .modal-content {
        max-width: 99vw !important;
        width: 99vw !important;
        min-width: 0 !important;
        padding: 1.1rem 0.5rem !important;
        border-radius: 12px !important;
        left: 0 !important;
        right: 0 !important;
        margin: 0 auto !important;
      }
      .close-modal {
        top: 0.7rem !important;
        right: 0.7rem !important;
        font-size: 1.7rem !important;
      }
      .form-inline-group {
        flex-direction: column !important;
        gap: 0.5rem !important;
      }
      .preview-img {
        max-width: 100% !important;
        height: auto !important;
      }
      .points-info {
        font-size: 0.97rem !important;
        padding: 0.5rem 0.7rem !important;
      }
      .after-create {
        padding: 1rem !important;
        border-radius: 10px !important;
        font-size: 0.97rem !important;
      }
      .modal-bg {
        align-items: flex-start !important;
        padding-top: 2vh !important;
      }
      .modal-content {
        max-height: 95vh !important;
        overflow-y: auto !important;
      }
      .choices__inner {
        font-size: 0.97rem !important;
        min-height: 38px !important;
        padding: 0.5rem 0.7rem !important;
      }
      /* Hamburger menu: oculto en m√≥vil */
      .navbar .hamburger {
        display: none !important;
      }
      /* Men√∫ inferior fijo: ocupa todo el ancho y sin scroll lateral */
      .bottom-nav,
      .mobile-bottom-nav {
        position: fixed !important;
        left: 0 !important;
        right: 0 !important;
        bottom: 0 !important;
        width: 100vw !important;
        max-width: 100vw !important;
        min-width: 0 !important;
        border-radius: 0 !important;
        box-shadow: 0 -2px 12px rgba(0,0,0,0.07);
        z-index: 1002;
      }
      .bottom-nav .nav-item,
      .mobile-bottom-nav .nav-item {
        flex: 1 1 0;
        min-width: 0;
        text-align: center;
        font-size: 1.1rem;
        padding: 0.7rem 0 0.3rem 0;
      }
      /* Evita scroll lateral por cualquier elemento */
      * {
        box-sizing: border-box !important;
        max-width: 100vw;
        word-break: break-word;
      }
    }
    /* Refuerzo para evitar scroll lateral en todo el sitio */
    body {
      overflow-x: hidden !important;
      max-width: 100vw !important;
    }
    @media (max-width: 600px) {
      #createVolunteeringModal .modal-content,
      #volunteeringModal .modal-content,
      .modal-content {
        margin-top: 100px !important;
        margin-bottom: 90px !important;
        margin-left: 2vw !important;
        margin-right: 2vw !important;
        width: 96vw !important;
        max-width: 96vw !important;
        min-width: 0 !important;
        border-radius: 14px !important;
        box-sizing: border-box !important;
        left: 0 !important;
        right: 0 !important;
        max-height: calc(100vh - 190px) !important;
        overflow-y: auto !important;
        padding-left: 5vw !important;
        padding-right: 5vw !important;
      }
      .btn, .btn-accent, .btn-primary, .btn-outline,
      .volunteering-actions .btn, .modal-cause-actions .action-btn, .modal-cause-actions .btn,
      .after-create .btn, .modal-buttons .btn {
        border-radius: 999px !important;
        font-weight: 600 !important;
        font-size: 1rem !important;
        padding: 0.7rem 1.2rem !important;
        width: 100% !important;
        min-width: 0 !important;
        max-width: 100vw !important;
        display: flex !important;
        justify-content: center !important;
        align-items: center !important;
        margin: 0.3rem 0 !important;
        box-sizing: border-box !important;
        gap: 0.7rem !important;
      }
      .volunteering-actions .btn i,
      .modal-cause-actions .action-btn i,
      .modal-cause-actions .btn i,
      .after-create .btn i,
      .modal-buttons .btn i,
      .btn i,
      .btn-primary i,
      .btn-accent i,
      .btn-outline i {
        display: inline-block !important;
      }
      #volunteeringModal .modal-header,
      #volunteeringModal .modal-title {
        text-align: center !important;
        font-size: 1.1rem !important;
        font-weight: 700 !important;
        margin-bottom: 0.7rem !important;
        word-break: break-word !important;
      }
      #volunteeringModal .modal-body {
        padding: 0.7rem 0.2rem !important;
        font-size: 0.97rem !important;
      }
      #volunteeringModal .modal-close,
      #createVolunteeringModal .close-modal {
        top: 0.7rem !important;
        right: 0.9rem !important;
        font-size: 1.7rem !important;
      }
      /* MODAL VER M√ÅS: imagen arriba, info debajo */
      #volunteeringModal .volunteering-modal-main {
        flex-direction: column !important;
        display: flex !important;
        gap: 1.2rem !important;
        align-items: stretch !important;
        width: 100% !important;
        margin-bottom: 1.2rem !important;
      }
      #volunteeringModal .volunteering-modal-main > div {
        width: 100% !important;
        min-width: 0 !important;
        max-width: 100% !important;
      }
      #volunteeringModal .volunteering-modal-main img {
        width: 100% !important;
        max-width: 100vw !important;
        height: auto !important;
        display: block !important;
        object-fit: cover !important;
        margin: 0 auto !important;
      }
    }
    @media (min-width: 601px) {
      #createVolunteeringModal .modal-content,
      #volunteeringModal .modal-content,
      .modal-content {
        max-width: 60vw !important; /* Cambia a 50vw si lo prefieres */
        width: 60vw !important;
        min-width: 320px !important;
        margin-left: auto !important;
        margin-right: auto !important;
        border-radius: 14px !important;
        box-sizing: border-box !important;
        padding-left: 2rem !important;
        padding-right: 2rem !important;
      }
    }
  </style>
{% endblock %}

{% block content %}
  <!-- Modal para usuarios no logueados -->
  <div class="modal-bg" id="loginModal">
    <div class="modal-content">
      <h3>Para crear un voluntariado</h3>
      <p>Debes ser un usuario registrado. ¬øDeseas iniciar sesi√≥n o registrarte ahora?</p>
      <div class="modal-buttons">
        <a href="/login?return=/volunteering" class="btn btn-primary">Iniciar Sesi√≥n</a>
        <a href="/register?return=/volunteering" class="btn btn-outline">Registrarse</a>
        <button id="cancelModal" class="btn">Cancelar</button>
      </div>
    </div>
  </div>

  <!-- Modal emergente para crear voluntariado -->
  <div id="createVolunteeringModal" class="modal-bg">
    <div class="modal-content">
      <button class="close-modal" id="closeCreateVolunteeringModal" title="Cerrar">&times;</button>
      <div class="create-task-title">
        <i class="fas fa-plus-circle"></i> Crear Nueva Oportunidad de Voluntariado
      </div>
      <form class="task-form" id="volunteeringForm" autocomplete="off">
        <div class="form-group">
          <label for="title">T√≠tulo del voluntariado</label>
          <input type="text" id="title" name="title" placeholder="Ej: Apoyo escolar a ni√±os" required>
        </div>
        <div class="form-group">
          <label for="photo">Foto principal</label>
          <input type="file" id="photo" name="photo" accept="image/*">
          <img id="previewImg" class="preview-img" alt="Vista previa de la foto" style="display:none;">
        </div>
        <div class="form-group">
          <label for="summary">Resumen breve</label>
          <input type="text" id="summary" name="summary" maxlength="120" placeholder="Un resumen breve del voluntariado (m√°x 120 caracteres)" required>
        </div>
        <div class="form-group">
          <label for="description">Descripci√≥n</label>
          <textarea id="description" name="description" placeholder="Describe el voluntariado, qu√© actividades se realizar√°n..." required></textarea>
        </div>
        <div class="form-group">
          <label for="category">Categor√≠a</label>
          <select id="category" name="category" required>
            <option value="">Selecciona categor√≠a</option>
            <option value="education">Educaci√≥n</option>
            <option value="health">Salud</option>
            <option value="environment">Medio Ambiente</option>
            <option value="animals">Animales</option>
            <option value="community">Comunidad</option>
            <option value="remote">Remoto</option>
          </select>
        </div>
        <div class="form-group">
          <label for="cause_id">Vinculado a causa (opcional)</label>
          <select id="cause-select" name="cause_id">
            <option value="">Selecciona una causa</option>
          </select>
        </div>
        <div class="form-inline-group">
          <div class="form-group">
            <label for="city">Ciudad</label>
            <input type="text" id="city" name="city" placeholder="Ej: Madrid" required>
          </div>
          <div class="form-group">
            <label for="country">Pa√≠s</label>
            <input type="text" id="country" name="country" placeholder="Ej: Espa√±a" required>
          </div>
        </div>
        <div class="form-group">
          <label for="points">Puntos por participar</label>
          <input type="number" id="points" name="points" min="10" max="1000" value="50" required>
          <div class="points-info" id="pointsText">
            <i class="fas fa-star"></i>
            Participar en este voluntariado otorgar√° <strong>50 puntos</strong> por participaci√≥n.
          </div>
        </div>
        <div class="form-inline-group">
          <div class="form-group">
            <label for="beneficiarios">Beneficiarios</label>
            <input type="number" id="beneficiarios" name="beneficiarios" min="1" placeholder="Ej: 100" required>
          </div>
          <div class="form-group">
            <label for="volunteers_needed">Voluntarios necesarios</label>
            <input type="number" id="volunteers_needed" name="volunteers_needed" min="1" placeholder="Ej: 10" required>
          </div>
        </div>
        <div class="form-inline-group">
          <div class="form-group">
            <label for="start_date">Fecha de inicio</label>
            <input type="date" id="start_date" name="start_date" required>
          </div>
          <div class="form-group">
            <label for="end_date">Fecha de finalizaci√≥n</label>
            <input type="date" id="end_date" name="end_date" required>
          </div>
        </div>
        <div class="form-group">
          <label for="schedule">Horario (opcional)</label>
          <input type="text" id="schedule" name="schedule" placeholder="Ej: Lunes a Viernes de 16:00 a 18:00">
        </div>
        <div class="form-group">
          <label for="skills_required">Habilidades requeridas (opcional)</label>
          <input type="text" id="skills_required" name="skills_required" placeholder="Ej: Docencia, Paciencia, etc.">
        </div>
        <div class="form-group" style="display:flex; align-items:center; gap:0.7rem; margin-bottom:0;">
          <input type="checkbox" id="is_urgent" name="is_urgent" style="width:18px; height:18px; accent-color:var(--urgent); margin:0;">
          <label for="is_urgent" style="margin:0; font-weight:500; color:#e53e3e; cursor:pointer;">
            Marcar como urgente
          </label>
        </div>
        <input type="hidden" id="lat" name="lat">
        <input type="hidden" id="lng" name="lng">
        <button type="submit" class="btn btn-primary" style="margin-top:1rem;">
          <i class="fas fa-paper-plane"></i> Crear Voluntariado
        </button>
      </form>
      <div class="after-create" id="afterCreate" style="display:none;">
        <h3>¬°Voluntariado creado con √©xito!</h3>
        <p>¬øQuieres ver todos los voluntariados o crear otro?</p>
        <a href="/volunteering" class="btn btn-accent">
          <i class="fas fa-hands-helping"></i> Ver voluntariados
        </a>
        <br>
        <a href="#" id="createAnother" class="btn btn-outline" style="margin-top:1rem;">
          <i class="fas fa-plus"></i> Crear otro voluntariado
        </a>
      </div>
    </div>
  </div>

  <!-- Contenido principal -->
  <div class="main-container">
    <div class="volunteering-intro">
      <div class="volunteering-intro-content">
        <h2><i class="fas fa-hands-helping"></i> ¬°Haz voluntariado y cambia vidas!</h2>
        <p>Descubre oportunidades de voluntariado, aporta tu tiempo y talento, suma impacto y vive experiencias √∫nicas ayudando a quienes m√°s lo necesitan.</p>
      </div>
    </div>
    <div class="volunteering-header">
      <h1>Oportunidades de Voluntariado</h1>
      <div class="volunteering-actions">
        <a href="#" id="create-volunteering-btn" class="btn btn-primary">
          <i class="fas fa-plus"></i> Crear Voluntariado
        </a>
      </div>
    </div>
    <div class="volunteering-search">
      <input type="text" id="search-input" placeholder="Buscar por t√≠tulo, pa√≠s, descripci√≥n...">
      <i class="fas fa-search" style="color:#4a6fa5;"></i>
    </div>
    <!-- Tabs -->
    <div class="tabs">
      <button class="tab active" data-filter="all">Todos los voluntariados</button>
      <button class="tab" data-filter="education">Educaci√≥n</button>
      <button class="tab" data-filter="health">Salud</button>
      <button class="tab" data-filter="environment">Medio Ambiente</button>
      <button class="tab" data-filter="animals">Animales</button>
      <button class="tab" data-filter="community">Comunidad</button>
      <button class="tab" data-filter="remote">Remotos</button>
    </div>
    <div class="volunteering-grid" id="volunteeringsList">
      <!-- Aqu√≠ se cargar√°n los voluntariados usando el renderer -->
    </div>
  </div>
{% endblock %}

{% block scripts %}
{{ super() }}
<script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
<script src="/js/modules/share-system.js"></script>
<script src="/js/modules/volunteering-renderer.js"></script>
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
<script>
let currentFilter = "all";
let causeChoices = null;
let causesMap = {};
let currentUserId = null;

document.addEventListener('DOMContentLoaded', async function() {
  // ‚úÖ DETECTAR URL y abrir modal autom√°ticamente (mejorado)
  setTimeout(() => {
    const urlPath = window.location.pathname;
    // Mejorar regex para manejar tanto /volunteering/id como /voluntariado/id
    const volunteeringIdMatch = urlPath.match(/^\/(volunteering|voluntariado)\/([a-zA-Z0-9\-_]+)\/?$/);
    if (volunteeringIdMatch) {
      const volunteeringId = volunteeringIdMatch[2];
      console.log('üéØ URL detectada para voluntariado espec√≠fico:', volunteeringId);
      
      // Esperar a que se carguen los voluntariados y el renderer
      const waitForVolunteerings = () => {
        if (window.volunteerings && window.volunteerings.length > 0 && window.volunteeringRenderer) {
          const volunteering = window.volunteerings.find(v => v.id === volunteeringId);
          if (volunteering) {
            console.log('‚úÖ Voluntariado encontrado, abriendo modal...');
            // Actualizar URL sin el ID despu√©s de abrir el modal
            window.history.replaceState({}, '', '/volunteering');
            window.volunteeringRenderer.showVolunteeringModal(volunteeringId);
          } else {
            console.error('‚ùå Voluntariado no encontrado, redirigiendo...');
            window.location.href = '/volunteering';
          }
        } else {
          setTimeout(waitForVolunteerings, 500);
        }
      };
      
      setTimeout(waitForVolunteerings, 1000);
    }
  }, 500);

  // Obtener usuario actual para l√≥gica de botones
  const { data: { session } } = await supabase.auth.getSession();
  currentUserId = session?.user?.id || null;

  // Abrir modal de crear voluntariado
  document.getElementById('create-volunteering-btn').onclick = async function(e) {
    e.preventDefault();
    const { data: { session } } = await supabase.auth.getSession();
    if (session?.user) {
      await loadCausesForSelect();
      document.getElementById('createVolunteeringModal').classList.add('active');
      document.body.style.overflow = 'hidden';
    } else {
      document.getElementById('loginModal').classList.add('active');
    }
  };

  // Cerrar modal de crear voluntariado
  document.getElementById('closeCreateVolunteeringModal').onclick = function() {
    document.getElementById('createVolunteeringModal').classList.remove('active');
    document.body.style.overflow = '';
    document.getElementById('volunteeringForm').reset();
    document.getElementById('previewImg').style.display = 'none';
    document.getElementById('volunteeringForm').style.display = 'block';
    document.getElementById('afterCreate').style.display = 'none';
  };
  document.getElementById('createVolunteeringModal').onclick = function(e) {
    if (e.target === this) {
      this.classList.remove('active');
      document.body.style.overflow = '';
      document.getElementById('volunteeringForm').style.display = 'block';
      document.getElementById('afterCreate').style.display = 'none';
    }
  };

  // Modal login
  document.getElementById('cancelModal').onclick = function() {
    document.getElementById('loginModal').classList.remove('active');
  };
  document.getElementById('loginModal').onclick = function(e) {
    if (e.target === this) this.classList.remove('active');
  };

  // Vista previa de imagen
  document.getElementById('photo').addEventListener('change', function(e) {
    const file = e.target.files[0];
    const preview = document.getElementById('previewImg');
    if (file) {
      const reader = new FileReader();
      reader.onload = function(evt) {
        preview.src = evt.target.result;
        preview.style.display = 'block';
      };
      reader.readAsDataURL(file);
    } else {
      preview.src = '';
      preview.style.display = 'none';
    }
  });

  // Actualizar texto de puntos
  document.getElementById('points').addEventListener('input', function() {
    const val = this.value || 0;
    document.getElementById('pointsText').innerHTML = `<i class="fas fa-star"></i> Participar en este voluntariado otorgar√° <strong>${val} puntos</strong> por participaci√≥n.`;
  });

  // Crear otro voluntariado tras √©xito
  document.getElementById('createAnother').onclick = function(e) {
    e.preventDefault();
    document.getElementById('volunteeringForm').reset();
    document.getElementById('previewImg').style.display = 'none';
    document.getElementById('volunteeringForm').style.display = 'block';
    document.getElementById('afterCreate').style.display = 'none';
  };

  // Env√≠o del formulario
  document.getElementById('volunteeringForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const title = document.getElementById('title').value.trim();
    const summary = document.getElementById('summary').value.trim();
    const description = document.getElementById('description').value.trim();
    const category = document.getElementById('category').value;
    const cause_id = document.getElementById('cause-select').value || null;
    const city = document.getElementById('city').value.trim();
    const country = document.getElementById('country').value.trim();
    const points = parseInt(document.getElementById('points').value, 10);
    const beneficiaries = parseInt(document.getElementById('beneficiarios').value, 10);
    const volunteers_needed = parseInt(document.getElementById('volunteers_needed').value, 10);
    const start_date = document.getElementById('start_date').value;
    const end_date = document.getElementById('end_date').value;
    const schedule = document.getElementById('schedule').value.trim();
    const skills_required = document.getElementById('skills_required').value.trim();
    const is_urgent = document.getElementById('is_urgent').checked;
    const photoFile = document.getElementById('photo').files[0];
    let photo_url = null;

    if (photoFile) {
      const fileExt = photoFile.name.split('.').pop();
      const fileName = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}.${fileExt}`;
      const filePath = `public/${fileName}`;
      const { error: uploadError } = await supabase.storage
        .from('volunteering')
        .upload(filePath, photoFile, { upsert: true });
      if (uploadError) {
        alert('Error subiendo la foto: ' + uploadError.message);
        return;
      }
      const { data } = supabase.storage.from('volunteering').getPublicUrl(filePath);
      photo_url = data.publicUrl;
    }

    const { data: { session } } = await supabase.auth.getSession();
    const user = session?.user;
    if (!user) {
      alert('Debes iniciar sesi√≥n para crear un voluntariado.');
      return;
    }

    const lat = document.getElementById('lat').value;
    const lng = document.getElementById('lng').value;

    const { data: newVolunteering, error: volunteeringError } = await supabase
      .from('volunteering')
      .insert([{ 
        title, summary, description, category, user_id: user.id, cause_id, city, country, 
        points, beneficiaries, volunteers_needed, start_date, end_date, schedule, 
        skills_required, is_urgent, photo_url, volunteers: 0,
        lat: lat ? parseFloat(lat) : null, lng: lng ? parseFloat(lng) : null 
      }])
      .select()
      .single();

    if (!volunteeringError && newVolunteering) {
      await supabase
        .from('volunteering_members')
        .insert([{ volunteering_id: newVolunteering.id, user_id: user.id, role: 'founder', status: 'active' }]);
    }

    document.getElementById('volunteeringForm').style.display = 'none';
    document.getElementById('afterCreate').style.display = 'block';
    loadVolunteeringsFromSupabase();
  });

  // Tabs
  document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function() {
      document.querySelector('.tab.active').classList.remove('active');
      this.classList.add('active');
      loadVolunteeringsFromSupabase(this.getAttribute('data-filter'));
    });
  });

  // B√∫squeda
  document.getElementById('search-input').addEventListener('input', function() {
    loadVolunteeringsFromSupabase(currentFilter, this.value);
  });

  // Geocodificaci√≥n autom√°tica al cambiar ciudad o pa√≠s
  document.getElementById('city').addEventListener('change', geocodeCityCountry);
  document.getElementById('country').addEventListener('change', geocodeCityCountry);

  // Cargar causas en el mapa
  await loadCausesMap();
  loadVolunteeringsFromSupabase();
}); 

// Cargar causas en el select al abrir el modal de crear voluntariado
async function loadCausesForSelect() {
  const select = document.getElementById('cause-select');
  if (causeChoices) {
    causeChoices.destroy();
    causeChoices = null;
  }
  select.innerHTML = '<option value="">Selecciona una causa</option>';
  const { data: causes, error } = await supabase.from('causes').select('id, title');
  if (error) {
    alert('Error cargando causas: ' + error.message);
    return;
  }
  if (causes && causes.length > 0) {
    causes.forEach(cause => {
      const option = document.createElement('option');
      option.value = cause.id;
      option.textContent = cause.title;
      select.appendChild(option);
    });
  }
  causeChoices = new Choices(select, {
    searchEnabled: true,
    itemSelectText: '',
    shouldSort: false,
    placeholder: true,
    placeholderValue: 'Selecciona una causa',
    removeItemButton: true,
    noResultsText: 'No se encontraron causas',
  });
}

// Geocodificaci√≥n autom√°tica al cambiar ciudad o pa√≠s
async function geocodeCityCountry() {
  const city = document.getElementById('city').value.trim();
  const country = document.getElementById('country').value.trim();
  if (!city || !country) return;

  const query = encodeURIComponent(`${city}, ${country}`);
  const url = `https://nominatim.openstreetmap.org/search?q=${query}&format=json&limit=1`;

  try {
    const res = await fetch(url, { headers: { 'Accept-Language': 'es' } });
    const data = await res.json();
    if (data && data.length > 0) {
      document.getElementById('lat').value = data[0].lat;
      document.getElementById('lng').value = data[0].lon;
    } else {
      document.getElementById('lat').value = '';
      document.getElementById('lng').value = '';
    }
  } catch (e) {
    document.getElementById('lat').value = '';
    document.getElementById('lng').value = '';
  }
}

// Cargar causas en el mapa
async function loadCausesMap() {
  const { data: causes } = await supabase.from('causes').select('id, title, photo_url');
  if (causes) {
    causesMap = {};
    causes.forEach(c => {
      causesMap[c.id] = {
        title: c.title,
        photo_url: c.photo_url
      };
    });
  }
}

// ‚úÖ CARGAR VOLUNTARIADOS USANDO EL RENDERER (optimizado y corregido)
async function loadVolunteeringsFromSupabase(filter = "all", searchTerm = "") {
  currentFilter = filter;
  
  // Corregir la consulta de Supabase - usar la relaci√≥n correcta
  let query = supabase
    .from('volunteering')
    .select(`
      *,
      linkedCause:causes!volunteering_cause_id_fkey(id, title, photo_url)
    `)
    .order('created_at', { ascending: false });

  if (filter !== "all") {
    query = query.eq('category', filter);
  }
  if (searchTerm && searchTerm.trim() !== "") {
    query = query.or(`title.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%,city.ilike.%${searchTerm}%,country.ilike.%${searchTerm}%`);
  }

  // Obtener participaci√≥n del usuario
  let joinedVolunteeringIds = [];
  if (currentUserId) {
    const { data: memberships } = await supabase
      .from('volunteering_members')
      .select('volunteering_id')
      .eq('user_id', currentUserId)
      .eq('status', 'active');
    joinedVolunteeringIds = memberships ? memberships.map(m => m.volunteering_id) : [];
  }

  const { data: volunteerings, error } = await query;
  const volunteeringsList = document.getElementById('volunteeringsList');
  
  if (error) {
    console.error('‚ùå Error cargando volunteerings:', error);
    // Si hay error de relaci√≥n, intentar sin la causa vinculada
    if (error.message?.includes('relationship')) {
      console.log('üîÑ Reintentando sin causa vinculada...');
      const { data: volunteerings2, error: error2 } = await supabase
        .from('volunteering')
        .select('*')
        .order('created_at', { ascending: false });
      
      if (error2) {
        volunteeringsList.innerHTML = '<div style="color:#e53e3e;text-align:center;">Error al cargar los voluntariados.</div>';
        return;
      }
      
      // Procesar sin causa vinculada
      volunteerings2?.forEach(volunteering => {
        volunteering.isParticipating = joinedVolunteeringIds.includes(volunteering.id);
        volunteering.linkedCause = null;
        if (!volunteering.photo_url) {
          volunteering.photo_url = '/images/default-volunteering.jpg';
        }
      });
      
      window.volunteerings = volunteerings2 || [];
      
      if (window.volunteeringRenderer) {
        window.volunteeringRenderer.renderGrid(volunteerings2 || [], volunteeringsList);
      }
      return;
    }
    
    volunteeringsList.innerHTML = '<div style="color:#e53e3e;text-align:center;">Error al cargar los voluntariados.</div>';
    return;
  }

  if (!volunteerings || volunteerings.length === 0) {
    volunteeringsList.innerHTML = '<div style="color:#6b7280;text-align:center;padding:2rem;grid-column:1/-1;">No se encontraron voluntariados.</div>';
    return;
  }

  // Procesar datos para el renderer
  volunteerings.forEach(volunteering => {
    volunteering.isParticipating = joinedVolunteeringIds.includes(volunteering.id);
    
    // Mapear linkedCause para compatibilidad con el renderer
    if (volunteering.linkedCause && Array.isArray(volunteering.linkedCause)) {
      volunteering.linkedCause = volunteering.linkedCause[0] || null;
    }
    
    // Asegurar que tenga una imagen por defecto si no tiene
    if (!volunteering.photo_url) {
      volunteering.photo_url = '/images/default-volunteering.jpg';
    }
  });

  // ‚úÖ GUARDAR LOS VOLUNTARIADOS EN window.volunteerings
  window.volunteerings = volunteerings;

  // ‚úÖ USAR EL RENDERER AQU√ç
  if (window.volunteeringRenderer) {
    window.volunteeringRenderer.renderGrid(volunteerings, volunteeringsList);
  } else {
    console.error('‚ùå VolunteeringRenderer no disponible');
    volunteeringsList.innerHTML = '<div style="color:#e53e3e;text-align:center;">Error cargando el sistema de visualizaci√≥n.</div>';
  }
}

// ‚úÖ FUNCI√ìN DE PARTICIPAR (mejorada)
async function participateInVolunteering(volunteeringId, btn = null) {
  const { data: { session } } = await supabase.auth.getSession();
  if (!session?.user) {
    document.getElementById('loginModal').classList.add('active');
    return;
  }
  const userId = session.user.id;

  // Verificar si ya est√° participando
  const { data: existingMembership } = await supabase
    .from('volunteering_members')
    .select('id')
    .eq('volunteering_id', volunteeringId)
    .eq('user_id', userId)
    .eq('status', 'active')
    .single();

  if (existingMembership) {
    alert('Ya est√°s participando en este voluntariado.');
    return;
  }

  const { error } = await supabase
    .from('volunteering_members')
    .insert([{ volunteering_id: volunteeringId, user_id: userId, role: 'volunteer', status: 'active' }]);

  if (error) {
    console.error('‚ùå Error al participar:', error);
    alert('Error al participar: ' + error.message);
    return;
  }

  // Actualizar contador de voluntarios
  const { error: updateError } = await supabase
    .from('volunteering')
    .update({ volunteers: supabase.raw('volunteers + 1') })
    .eq('id', volunteeringId);

  if (updateError) {
    console.error('‚ùå Error actualizando contador:', updateError);
  }

  // Actualizar bot√≥n
  if (btn) {
    btn.innerHTML = '<i class="fas fa-check"></i> Participando';
    btn.disabled = true;
    btn.style.opacity = "0.7";
    btn.style.cursor = "not-allowed";
    btn.classList.remove('btn-primary');
    btn.classList.add('btn-secondary');
  }

  alert('¬°Ahora eres voluntario en esta actividad!');
  
  // Cerrar modal si est√° abierto
  if (window.volunteeringRenderer) {
    window.volunteeringRenderer.closeModal();
  }
  
  // Recargar voluntariados para actualizar estado
  loadVolunteeringsFromSupabase(currentFilter);
}

// ‚úÖ FUNCI√ìN PARA COMPARTIR VOLUNTARIADO
function shareVolunteering(volunteeringId) {
  if (window.shareSystem) {
    const volunteering = window.volunteerings?.find(v => v.id === volunteeringId);
    if (volunteering) {
      const shareData = {
        title: volunteering.title,
        description: volunteering.summary || volunteering.description.substring(0, 120) + '...',
        url: `${window.location.origin}/volunteering/${volunteeringId}`,
        image: volunteering.photo_url
      };
      window.shareSystem.share(shareData);
    }
  } else {
    // Fallback simple
    const url = `${window.location.origin}/volunteering/${volunteeringId}`;
    navigator.clipboard.writeText(url).then(() => {
      alert('¬°Enlace copiado al portapapeles!');
    }).catch(() => {
      prompt('Copia este enlace:', url);
    });
  }
}

// Sup√≥n que tienes una variable global window.volsData con los voluntariados
document.addEventListener('DOMContentLoaded', function() {
  const container = document.getElementById('volunteeringGrid');
  if (window.volsData) {
    window.volunteeringRenderer.renderGrid(window.volsData, container);
  }
});

// ‚úÖ EXPONER FUNCIONES GLOBALMENTE PARA EL RENDERER
window.participateInVolunteering = participateInVolunteering;
window.shareVolunteering = shareVolunteering;
</script>
{% endblock %}