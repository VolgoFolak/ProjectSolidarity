{% extends "layout.njk" %}

{% block title %}Voluntariados - Solidarity{% endblock %}

{% block head %}
  {{ super() }}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
  <style>
    :root {
      --primary: #4a6fa5;
      --primary-dark: #166088;
      --gray: #e2e8f0;
      --white: #fff;
      --accent: #4fc3a1;
      --accent-dark: #3da58a;
      --urgent: #e53e3e;
    }
    body {
      background: #f8fafc;
      font-family: 'Inter', Arial, sans-serif;
      color: #2d3748;
      font-size: 1rem;
    }
    .modal-bg {
      display: none;
      position: fixed;
      top: 0; left: 0; width: 100vw; height: 100vh;
      background: rgba(0,0,0,0.35);
      z-index: 9999;
      align-items: center;
      justify-content: center;
    }
    .modal-bg.active { display: flex; }
    .modal-content {
      background: #fff;
      border-radius: 18px;
      max-width: 540px;
      width: 95vw;
      padding: 2.5rem 1.5rem 2rem 1.5rem;
      box-shadow: 0 8px 32px rgba(0,0,0,0.13);
      position: relative;
      animation: fadeIn 0.3s;
      max-height: 90vh;
      overflow-y: auto;
    }
    .close-modal {
      position: absolute;
      top: 1.1rem; right: 1.3rem;
      background: none;
      border: none;
      font-size: 2rem;
      color: #aaa;
      cursor: pointer;
      transition: color 0.2s;
    }
    .close-modal:hover { color: var(--primary, #4a6fa5); }
    .create-volunteering-title {
      font-size: 1.5rem;
      font-weight: 800;
      color: var(--primary, #4a6fa5);
      margin-bottom: 1.2rem;
      text-align: center;
    }
    .volunteering-form .form-group label { font-weight: 600; color: var(--primary, #4a6fa5); }
    .volunteering-form .form-group input,
    .volunteering-form .form-group textarea,
    .volunteering-form .form-group select {
      width: 100%;
      padding: 0.7rem 1rem;
      border-radius: 8px;
      border: 1px solid #e5e7eb;
      margin-bottom: 0.2rem;
      font-size: 1rem;
      background: #f8fafc;
      transition: border 0.2s;
    }
    .volunteering-form .form-group input:focus,
    .volunteering-form .form-group textarea:focus,
    .volunteering-form .form-group select:focus {
      border: 1.5px solid var(--accent, #4fc3a1);
      outline: none;
      background: #fff;
    }
    .volunteering-form .form-group textarea {
      min-height: 90px;
      resize: vertical;
    }
    .form-inline-group {
      display: flex;
      gap: 1rem;
    }
    .form-inline-group .form-group { flex: 1; }
    .preview-img {
      width: 100%;
      max-width: 320px;
      height: 180px;
      object-fit: cover;
      border-radius: 10px;
      margin-top: 0.5rem;
      border: 1px solid #e5e7eb;
      display: none;
    }
    .points-info {
      background: var(--accent, #4fc3a1);
      color: #fff;
      border-radius: 8px;
      padding: 0.7rem 1rem;
      margin-top: 0.5rem;
      font-size: 1.05rem;
      display: flex;
      align-items: center;
      gap: 0.7rem;
    }
    .after-create {
      margin-top: 2rem;
      background: var(--primary-light, #e6f0fa);
      color: #444;
      border-radius: 10px;
      padding: 1.5rem 1rem;
      text-align: center;
    }
    @media (max-width: 600px) {
      .modal-content { padding: 1.2rem 0.5rem 1.2rem 0.5rem; }
      .create-volunteering-title { font-size: 1.1rem; }
      .form-inline-group { flex-direction: column; }
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-30px);}
      to { opacity: 1; transform: translateY(0);}
    }
    /* SOLO estilos de la página de voluntariados */
    .main-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 2rem;
    }
    .volunteering-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }
    .volunteering-header h1 {
        font-size: 2rem;
        color: var(--primary);
        font-weight: 700;
    }
    .volunteering-search {
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 0.7rem;
    }
    .volunteering-search input {
        flex: 1;
        padding: 0.6rem 1.2rem;
        border-radius: 7px;
        border: 1.5px solid var(--gray);
        font-size: 1.05rem;
        outline: none;
        transition: border 0.2s;
        background: #fff;
    }
    .volunteering-search input:focus {
        border-color: var(--primary);
    }
    .tabs {
        display: flex;
        border-bottom: 1px solid var(--gray);
        margin-bottom: 2rem;
    }
    .tab {
        padding: 0.75rem 1.5rem;
        cursor: pointer;
        position: relative;
        font-weight: 500;
        color: #6b7280;
        background: none;
        border: none;
        outline: none;
    }
    .tab.active {
        color: var(--primary);
        font-weight: 600;
    }
    .tab.active::after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        width: 100%;
        height: 3px;
        background: var(--primary);
    }
    .volunteering-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
    }
    .volunteering-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        border: 1px solid var(--gray);
        display: flex;
        flex-direction: column;
    }
    .volunteering-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    .volunteering-image {
        height: 180px;
        overflow: hidden;
        position: relative;
    }
    .volunteering-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    .volunteering-card:hover .volunteering-image img {
        transform: scale(1.05);
    }
    .volunteering-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(255, 255, 255, 0.9);
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .volunteering-badge.urgent {
        background: var(--urgent);
        color: white;
    }
    .volunteering-badge.points {
        background: var(--primary);
        color: white;
        left: 1rem;
        right: auto;
    }
    .volunteering-badge.remote {
        background: var(--accent);
        color: white;
        top: 3.5rem;
    }
    .volunteering-content {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        flex: 1;
    }
    .volunteering-content h3 {
        font-size: 1.3rem;
        margin-bottom: 0.8rem;
        color: #2d3748;
    }
    .volunteering-content p {
        color: #6b7280;
        margin-bottom: 1.5rem;
        font-size: 0.95rem;
        line-height: 1.6;
        flex-grow: 1;
    }
    .volunteering-meta {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
        font-size: 0.85rem;
        flex-wrap: wrap;
    }
    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #6b7280;
    }
    .meta-item i {
        color: var(--primary);
    }
    .participants-count {
        display: inline-flex;
        align-items: center;
        background: #f0f9ff;
        color: var(--primary);
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 600;
    }
    .participants-count i {
        margin-right: 0.3rem;
    }
    .linked-cause {
        display: inline-flex;
        align-items: center;
        background: #f0f0ff;
        color: var(--primary);
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    .volunteering-progress {
        margin-bottom: 1.5rem;
    }
    .progress-bar {
        height: 8px;
        background: var(--gray);
        border-radius: 4px;
        overflow: hidden;
        margin-bottom: 0.5rem;
    }
    .progress-fill {
        height: 100%;
        background: var(--primary);
        border-radius: 4px;
    }
    .progress-info {
        display: flex;
        justify-content: space-between;
        font-size: 0.9rem;
        color: #6b7280;
    }
    .volunteering-actions {
        display: flex;
        gap: 0.8rem;
    }
    .volunteering-actions .btn {
        flex: 1;
        text-align: center;
        justify-content: center;
    }
    .btn-accent {
        background: var(--accent);
        color: white;
    }
    .btn-accent:hover {
        background: var(--accent-dark);
        transform: translateY(-2px);
    }
    @media (max-width: 900px) {
        .main-container {
            padding: 1.2rem 0.5rem;
        }
    }
    @media (max-width: 768px) {
        .volunteering-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
        .volunteering-grid {
            grid-template-columns: 1fr;
        }
        .volunteering-actions {
            flex-direction: column;
        }
    }
  </style>
{% endblock %}

{% block content %}
  <!-- Modal para usuarios no logueados -->
  <div class="modal-bg" id="loginModal">
    <div class="modal-content">
      <h3>Para crear un voluntariado</h3>
      <p>Debes ser un usuario registrado. ¿Deseas iniciar sesión o registrarte ahora?</p>
      <div class="modal-buttons">
        <a href="/login?return=/volunteering" class="btn btn-primary">Iniciar Sesión</a>
        <a href="/register?return=/volunteering" class="btn btn-outline">Registrarse</a>
        <button id="cancelModal" class="btn">Cancelar</button>
      </div>
    </div>
  </div>

  <!-- Modal emergente para crear voluntariado -->
  <div id="createVolunteeringModal" class="modal-bg">
    <div class="modal-content">
      <button class="close-modal" id="closeCreateVolunteeringModal" title="Cerrar">&times;</button>
      <div class="create-volunteering-title">
        <i class="fas fa-plus-circle"></i> Crear Nueva Oportunidad de Voluntariado
      </div>
      <form class="volunteering-form" id="volunteeringForm" autocomplete="off">
        <div class="form-group">
          <label for="title">Título del voluntariado</label>
          <input type="text" id="title" name="title" placeholder="Ej: Tutoría para niños en riesgo" required>
        </div>
        <div class="form-group">
          <label for="photo">Foto principal</label>
          <input type="file" id="photo" name="photo" accept="image/*">
          <img id="previewImg" class="preview-img" alt="Vista previa de la foto" style="display:none;">
        </div>
        <div class="form-group">
          <label for="description">Descripción</label>
          <textarea id="description" name="description" placeholder="Describe el voluntariado, qué se necesita y cómo pueden ayudar los voluntarios..." required></textarea>
        </div>
        <div class="form-group">
          <label for="cause_id">Vinculado a causa (opcional)</label>
          <select id="cause-select" name="cause_id">
            <option value="">Selecciona una causa</option>
            <!-- Opciones dinámicas -->
          </select>
        </div>
        <div class="form-inline-group">
          <div class="form-group">
            <label for="city">Ciudad</label>
            <input type="text" id="city" name="city" placeholder="Ej: Madrid" required>
          </div>
          <div class="form-group">
            <label for="country">País</label>
            <input type="text" id="country" name="country" placeholder="Ej: España" required>
          </div>
        </div>
        <div class="form-group">
          <label for="points">Puntos por hora</label>
          <input type="number" id="points" name="points" min="1" max="1000" value="50" required>
          <div class="points-info" id="pointsText">
            <i class="fas fa-star"></i>
            Participar en este voluntariado otorgará <strong>50 puntos por hora</strong> a cada voluntario.
          </div>
        </div>
        <div class="form-group">
          <label for="volunteers_needed">Voluntarios necesarios</label>
          <input type="number" id="volunteers_needed" name="volunteers_needed" min="1" placeholder="Ej: 10" required>
        </div>
        <div class="form-group">
          <label for="is_urgent">
            <input type="checkbox" id="is_urgent" name="is_urgent"> Marcar como urgente
          </label>
        </div>
        <div class="form-group">
          <label for="is_remote">
            <input type="checkbox" id="is_remote" name="is_remote"> Voluntariado remoto
          </label>
        </div>
        <!-- Añade estos campos ocultos para geolocalización -->
        <input type="hidden" id="lat" name="lat">
        <input type="hidden" id="lng" name="lng">
        <button type="submit" class="btn btn-primary" style="margin-top:1rem;">
          <i class="fas fa-paper-plane"></i> Crear Voluntariado
        </button>
      </form>
      <div class="after-create" id="afterCreate" style="display:none;">
        <h3>¡Voluntariado creado con éxito!</h3>
        <p>¿Quieres ver todas las oportunidades o crear otra?</p>
        <a href="/volunteering" class="btn btn-accent">
          <i class="fas fa-hands-helping"></i> Ver voluntariados
        </a>
        <br>
        <a href="#" id="createAnother" class="btn btn-outline" style="margin-top:1rem;">
          <i class="fas fa-plus"></i> Crear otro voluntariado
        </a>
      </div>
    </div>
  </div>

  <!-- Contenido principal de la página de voluntariados -->
  <div class="main-container">
    <div class="volunteering-header">
      <h1>Oportunidades de Voluntariado</h1>
      <a href="#" id="create-volunteering-btn" class="btn btn-primary">
        <i class="fas fa-plus"></i> Crear Voluntariado
      </a>
    </div>
    <div class="volunteering-search">
      <input type="text" id="search-input" placeholder="Buscar por título, país, descripción...">
      <i class="fas fa-search" style="color:#4a6fa5;"></i>
    </div>
    <div class="tabs">
      <button class="tab active" data-filter="all">Todos</button>
      <button class="tab" data-filter="education">Educación</button>
      <button class="tab" data-filter="health">Salud</button>
      <button class="tab" data-filter="environment">Medio Ambiente</button>
      <button class="tab" data-filter="animals">Animales</button>
      <button class="tab" data-filter="community">Comunidad</button>
      <button class="tab" data-filter="remote">Remotos</button>
    </div>
    <div class="volunteering-grid" id="volunteeringList">
      <!-- Los voluntariados se cargarán dinámicamente desde Supabase -->
    </div>
  </div>
{% endblock %}

{% block scripts %}
{{ super() }}
<script>
let currentFilter = "all";
let causeChoices = null;

document.addEventListener('DOMContentLoaded', async function() {
  // Abrir modal de crear voluntariado
  document.getElementById('create-volunteering-btn').onclick = async function(e) {
    e.preventDefault();
    const { data: { session } } = await supabase.auth.getSession();
    if (session?.user) {
      await loadCausesForSelect();
      document.getElementById('createVolunteeringModal').classList.add('active');
      document.body.style.overflow = 'hidden';
    } else {
      document.getElementById('loginModal').classList.add('active');
    }
  };

  // Cerrar modal de crear voluntariado
  document.getElementById('closeCreateVolunteeringModal').onclick = function() {
    document.getElementById('createVolunteeringModal').classList.remove('active');
    document.body.style.overflow = '';
    document.getElementById('volunteeringForm').reset();
    document.getElementById('previewImg').style.display = 'none';
    document.getElementById('volunteeringForm').style.display = 'block';
    document.getElementById('afterCreate').style.display = 'none';
  };

  // Cerrar modal al hacer click fuera del contenido
  document.getElementById('createVolunteeringModal').onclick = function(e) {
    if (e.target === this) {
      this.classList.remove('active');
      document.body.style.overflow = '';
      document.getElementById('volunteeringForm').style.display = 'block';
      document.getElementById('afterCreate').style.display = 'none';
    }
  };

  // Modal login
  document.getElementById('cancelModal').onclick = function() {
    document.getElementById('loginModal').classList.remove('active');
  };
  document.getElementById('loginModal').onclick = function(e) {
    if (e.target === this) this.classList.remove('active');
  };

  // Tabs
  document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function() {
      document.querySelector('.tab.active').classList.remove('active');
      this.classList.add('active');
      loadVolunteeringFromSupabase(this.getAttribute('data-filter'));
    });
  });

  // Búsqueda
  document.getElementById('search-input').addEventListener('input', function() {
    loadVolunteeringFromSupabase(currentFilter, this.value);
  });

  // Vista previa de imagen
  document.getElementById('photo').addEventListener('change', function(e) {
    const file = e.target.files[0];
    const preview = document.getElementById('previewImg');
    if (file) {
      const reader = new FileReader();
      reader.onload = function(evt) {
        preview.src = evt.target.result;
        preview.style.display = 'block';
      };
      reader.readAsDataURL(file);
    } else {
      preview.src = '';
      preview.style.display = 'none';
    }
  });

  // Actualizar texto de puntos
  document.getElementById('points').addEventListener('input', function() {
    const val = this.value || 0;
    document.getElementById('pointsText').innerHTML = `<i class="fas fa-star"></i> Participar en este voluntariado otorgará <strong>${val} puntos por hora</strong> a cada voluntario.`;
  });

  // Crear otro voluntariado tras éxito
  document.getElementById('createAnother').onclick = function(e) {
    e.preventDefault();
    document.getElementById('volunteeringForm').reset();
    document.getElementById('previewImg').style.display = 'none';
    document.getElementById('volunteeringForm').style.display = 'block';
    document.getElementById('afterCreate').style.display = 'none';
  };

  // Envío del formulario
  document.getElementById('volunteeringForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    // Recoge los datos del formulario
    const title = document.getElementById('title').value.trim();
    const description = document.getElementById('description').value.trim();
    const city = document.getElementById('city').value.trim();
    const country = document.getElementById('country').value.trim();
    const points = parseInt(document.getElementById('points').value, 10);
    const volunteers_needed = parseInt(document.getElementById('volunteers_needed').value, 10);
    const is_urgent = document.getElementById('is_urgent').checked;
    const is_remote = document.getElementById('is_remote').checked;
    const cause_id = document.getElementById('cause-select').value || null;
    const photoFile = document.getElementById('photo').files[0];
    let photo_url = null;

    // Sube la foto a Supabase Storage si existe
    if (photoFile) {
      const fileExt = photoFile.name.split('.').pop();
      const fileName = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}.${fileExt}`;
      const filePath = `public/${fileName}`;
      const { error: uploadError } = await supabase.storage
        .from('volunteering')
        .upload(filePath, photoFile, { upsert: true });
      if (uploadError) {
        alert('Error subiendo la foto: ' + uploadError.message);
        return;
      }
      const { data } = supabase.storage.from('volunteering').getPublicUrl(filePath);
      photo_url = data.publicUrl;
    }

    // Guarda el voluntariado en la tabla
    const { data: { session } } = await supabase.auth.getSession();
    const user = session?.user;
    if (!user) {
      alert('Debes iniciar sesión para crear un voluntariado.');
      return;
    }

    const lat = document.getElementById('lat')?.value;
    const lng = document.getElementById('lng')?.value;

    const { error } = await supabase
      .from('volunteering')
      .insert([{
        title,
        description,
        city,
        country,
        points,
        volunteers_needed,
        is_urgent,
        is_remote,
        photo_url,
        user_id: user.id,
        volunteers: 0,
        cause_id,
        category: 'community', // Cambia según tu lógica
        lat: lat ? parseFloat(lat) : null,
        lng: lng ? parseFloat(lng) : null,
      }]);

    if (error) {
      alert('Error al crear el voluntariado: ' + error.message);
      return;
    }

    document.getElementById('volunteeringForm').style.display = 'none';
    document.getElementById('afterCreate').style.display = 'block';
    loadVolunteeringFromSupabase();
  });

  // Cargar voluntariados al iniciar
  await loadVolunteeringFromSupabase();
});

async function loadVolunteeringFromSupabase(filter = "all", searchTerm = "") {
  currentFilter = filter;
  let query = supabase
    .from('volunteering')
    .select('*')
    .order('created_at', { ascending: false });

  if (filter !== "all") {
    if (filter === "remote") {
      query = query.eq('is_remote', true);
    } else {
      query = query.eq('category', filter);
    }
  }
  if (searchTerm && searchTerm.trim() !== "") {
    query = query.or(`title.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%,city.ilike.%${searchTerm}%,country.ilike.%${searchTerm}%`);
  }
  const { data: volunteering, error } = await query;
  const volunteeringList = document.getElementById('volunteeringList');
  if (error) {
    volunteeringList.innerHTML = '<div style="color:#e53e3e;text-align:center;">Error al cargar los voluntariados.</div>';
    return;
  }
  volunteeringList.innerHTML = '';
  if (!volunteering || volunteering.length === 0) {
    volunteeringList.innerHTML = '<div style="color:#6b7280;text-align:center;padding:2rem;grid-column:1/-1;">No se encontraron voluntariados.</div>';
    return;
  }
  volunteering.forEach(volunteer => {
    const urgentBadge = volunteer.is_urgent ? `<div class="volunteering-badge urgent"><i class="fas fa-exclamation-circle"></i> Urgente</div>` : "";
    const pointsBadge = `<div class="volunteering-badge points"><i class="fas fa-star"></i> +${volunteer.points || 0} pts/h</div>`;
    const remoteBadge = volunteer.is_remote ? `<div class="volunteering-badge remote"><i class="fas fa-laptop-house"></i> Remoto</div>` : "";
    const location = volunteer.city && volunteer.country ? `${volunteer.city}, ${volunteer.country}` : "";
    const card = document.createElement('div');
    card.className = 'volunteering-card';
    card.innerHTML = `
      <div class="volunteering-image">
        <img src="${volunteer.photo_url || '/img/volunteer-default.jpg'}" alt="${volunteer.title}" onerror="this.src='/img/volunteer-default.jpg'">
        ${urgentBadge}
        ${pointsBadge}
        ${remoteBadge}
      </div>
      <div class="volunteering-content">
        <h3>${volunteer.title}</h3>
        <p>${volunteer.description}</p>
        ${volunteer.cause_id ? `<div class="linked-cause"><i class="fas fa-link"></i> Vinculado a causa #${volunteer.cause_id}</div>` : ''}
        <div class="volunteering-meta">
          <div class="meta-item"><i class="fas fa-map-marker-alt"></i> ${location}</div>
          <div class="meta-item"><i class="fas fa-users"></i> ${volunteer.volunteers || 0} voluntarios</div>
          <div class="participants-count">
            <i class="fas fa-user-plus"></i> Se necesitan ${volunteer.volunteers_needed || 0}
          </div>
        </div>
        <div class="volunteering-progress">
          <div class="progress-bar">
            <div class="progress-fill" style="width: ${Math.min(Math.round((volunteer.volunteers / volunteer.volunteers_needed) * 100), 100)}%"></div>
          </div>
          <div class="progress-info">
            <span>${volunteer.volunteers || 0} voluntarios</span>
            <span>Meta: ${volunteer.volunteers_needed || 0}</span>
          </div>
        </div>
        <div class="volunteering-actions">
          <a href="/volunteering/${volunteer.id}" class="btn btn-primary">Ver más</a>
          <a href="#" class="btn btn-accent">Unirse</a>
        </div>
      </div>
    `;
    volunteeringList.appendChild(card);
  });
}

// Carga las causas para el selector en el modal de creación de voluntariado
async function loadCausesForSelect() {
  const select = document.getElementById('cause-select');
  if (!select) return;
  if (causeChoices) {
    causeChoices.destroy();
    causeChoices = null;
  }
  select.innerHTML = '<option value="">Selecciona una causa</option>';
  const { data: causes, error } = await supabase.from('causes').select('id, title');
  if (error) {
    alert('Error cargando causas: ' + error.message);
    return;
  }
  if (causes && causes.length > 0) {
    causes.forEach(cause => {
      const option = document.createElement('option');
      option.value = cause.id;
      option.textContent = cause.title;
      select.appendChild(option);
    });
  }
  causeChoices = new Choices(select, {
    searchEnabled: true,
    itemSelectText: '',
    shouldSort: false,
    placeholder: true,
    placeholderValue: 'Selecciona una causa',
    removeItemButton: true,
    noResultsText: 'No se encontraron causas',
  });
}

async function geocodeCityCountry() {
  const city = document.getElementById('city').value.trim();
  const country = document.getElementById('country').value.trim();
  if (!city || !country) return;

  const query = encodeURIComponent(`${city}, ${country}`);
  const url = `https://nominatim.openstreetmap.org/search?q=${query}&format=json&limit=1`;

  try {
    const res = await fetch(url, { headers: { 'Accept-Language': 'es' } });
    const data = await res.json();
    if (data && data.length > 0) {
      document.getElementById('lat').value = data[0].lat;
      document.getElementById('lng').value = data[0].lon;
    } else {
      document.getElementById('lat').value = '';
      document.getElementById('lng').value = '';
    }
  } catch (e) {
    document.getElementById('lat').value = '';
    document.getElementById('lng').value = '';
  }
}

document.getElementById('city').addEventListener('change', geocodeCityCountry);
document.getElementById('country').addEventListener('change', geocodeCityCountry);
</script>
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
{% endblock %}