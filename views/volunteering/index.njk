{% extends "layout.njk" %}

{% block title %}Voluntariados - Solidarity{% endblock %}

{% block head %}
  {{ super() }}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
  <style>
    :root {
      --primary: #4a6fa5;
      --primary-dark: #166088;
      --gray: #e2e8f0;
      --white: #fff;
      --accent: #4fc3a1;
      --accent-dark: #3da58a;
      --urgent: #e53e3e;
    }
    body {
      background: #f8fafc;
      font-family: 'Inter', Arial, sans-serif;
      color: #2d3748;
      font-size: 1rem;
    }
    .modal-bg {
      display: none;
      position: fixed;
      top: 0; left: 0; width: 100vw; height: 100vh;
      background: rgba(0,0,0,0.35);
      z-index: 9999;
      align-items: center;
      justify-content: center;
    }
    .modal-bg.active { display: flex; }
    .modal-content {
      background: #fff;
      border-radius: 18px;
      max-width: 540px;
      width: 95vw;
      padding: 2.5rem 1.5rem 2rem 1.5rem;
      box-shadow: 0 8px 32px rgba(0,0,0,0.13);
      position: relative;
      animation: fadeIn 0.3s;
      max-height: 90vh;
      overflow-y: auto;
    }
    .close-modal {
      position: absolute;
      top: 1.1rem; right: 1.3rem;
      background: none;
      border: none;
      font-size: 2rem;
      color: #aaa;
      cursor: pointer;
      transition: color 0.2s;
    }
    .close-modal:hover { color: var(--primary, #4a6fa5); }
    .create-volunteering-title {
      font-size: 1.5rem;
      font-weight: 800;
      color: var(--primary, #4a6fa5);
      margin-bottom: 1.2rem;
      text-align: center;
    }
    .volunteering-form .form-group label { font-weight: 600; color: var(--primary, #4a6fa5); }
    .volunteering-form .form-group input,
    .volunteering-form .form-group textarea,
    .volunteering-form .form-group select {
      width: 100%;
      padding: 0.7rem 1rem;
      border-radius: 8px;
      border: 1px solid #e5e7eb;
      margin-bottom: 0.2rem;
      font-size: 1rem;
      background: #f8fafc;
      transition: border 0.2s;
    }
    .volunteering-form .form-group input:focus,
    .volunteering-form .form-group textarea:focus,
    .volunteering-form .form-group select:focus {
      border: 1.5px solid var(--accent, #4fc3a1);
      outline: none;
      background: #fff;
    }
    .volunteering-form .form-group textarea {
      min-height: 90px;
      resize: vertical;
    }
    .form-inline-group {
      display: flex;
      gap: 1rem;
    }
    .form-inline-group .form-group { flex: 1; }
    .preview-img {
      width: 100%;
      max-width: 320px;
      height: 180px;
      object-fit: cover;
      border-radius: 10px;
      margin-top: 0.5rem;
      border: 1px solid #e5e7eb;
      display: none;
    }
    .points-info {
      background: var(--accent, #4fc3a1);
      color: #fff;
      border-radius: 8px;
      padding: 0.7rem 1rem;
      margin-top: 0.5rem;
      font-size: 1.05rem;
      display: flex;
      align-items: center;
      gap: 0.7rem;
    }
    .after-create {
      margin-top: 2rem;
      background: var(--primary-light, #e6f0fa);
      color: #444;
      border-radius: 10px;
      padding: 1.5rem 1rem;
      text-align: center;
    }
    @media (max-width: 600px) {
      .modal-content { padding: 1.2rem 0.5rem 1.2rem 0.5rem; }
      .create-volunteering-title { font-size: 1.1rem; }
      .form-inline-group { flex-direction: column; }
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-30px);}
      to { opacity: 1; transform: translateY(0);}
    }
    /* SOLO estilos de la p√°gina de voluntariados */
    .main-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 2rem;
    }
    .volunteering-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }
    .volunteering-header h1 {
        font-size: 2rem;
        color: var(--primary);
        font-weight: 700;
        margin-bottom: 0;
    }
    .volunteering-search {
        margin-bottom: 2rem;
        display: flex;
        align-items: center;
        gap: 0.7rem;
    }
    .volunteering-search input {
        flex: 1;
        padding: 0.6rem 1.2rem;
        border-radius: 7px;
        border: 1.5px solid var(--gray);
        font-size: 1.05rem;
        outline: none;
        transition: border 0.2s;
        background: #fff;
    }
    .volunteering-search input:focus {
        border-color: var(--primary);
    }
    .tabs {
        display: flex;
        border-bottom: 1px solid var(--gray);
        margin-bottom: 2rem;
    }
    .tab {
        padding: 0.75rem 1.5rem;
        cursor: pointer;
        position: relative;
        font-weight: 500;
        color: #6b7280;
        background: none;
        border: none;
        outline: none;
    }
    .tab.active {
        color: var(--primary);
        font-weight: 600;
    }
    .tab.active::after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        width: 100%;
        height: 3px;
        background: var(--primary);
    }
    .volunteering-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
    }
    .volunteering-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        border: 1px solid var(--gray);
        display: flex;
        flex-direction: column;
    }
    .volunteering-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    .volunteering-image {
        height: 180px;
        overflow: hidden;
        position: relative;
    }
    .volunteering-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    .volunteering-card:hover .volunteering-image img {
        transform: scale(1.05);
    }
    .volunteering-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: rgba(255, 255, 255, 0.9);
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .volunteering-badge.urgent {
        background: var(--urgent);
        color: white;
    }
    .volunteering-badge.points {
        background: var(--primary);
        color: white;
        left: 1rem;
        right: auto;
    }
    .volunteering-badge.remote {
        background: var(--accent);
        color: white;
        top: 3.5rem;
    }
    .volunteering-content {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        flex: 1;
    }
    .volunteering-content h3 {
        font-size: 1.3rem;
        margin-bottom: 0.8rem;
        color: #2d3748;
    }
    .volunteering-content p {
        color: #6b7280;
        margin-bottom: 1.5rem;
        font-size: 0.95rem;
        line-height: 1.6;
        flex-grow: 1;
    }
    .volunteering-meta {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
        font-size: 0.85rem;
        flex-wrap: wrap;
    }
    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #6b7280;
    }
    .meta-item i {
        color: var(--primary);
    }
    .participants-count {
        display: inline-flex;
        align-items: center;
        background: #f0f9ff;
        color: var(--primary);
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.85rem;
        font-weight: 600;
    }
    .participants-count i {
        margin-right: 0.3rem;
    }
    .linked-cause {
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        margin-bottom: 0.7rem;
        background: none !important;
        padding: 0 !important;
        border-radius: 0 !important;
        font-size: 0.92rem !important;
        font-weight: 600;
        color: var(--primary);
    }
    .linked-cause img {
        width: 20px !important;
        height: 20px !important;
        object-fit: cover;
        border-radius: 50%;
        border: 1px solid var(--primary);
        background: #fff;
    }
    .linked-cause i {
        color: var(--primary);
        font-size: 0.92rem;
    }
    .linked-cause span {
        color: var(--primary);
        font-weight: 600;
        font-size: 0.92rem;
        display: inline-block;
        vertical-align: middle;
        line-height: 1.2;
    }
    .volunteering-progress {
        margin-bottom: 1.5rem;
    }
    .progress-bar {
        height: 8px;
        background: var(--gray);
        border-radius: 4px;
        overflow: hidden;
        margin-bottom: 0.5rem;
    }
    .progress-fill {
        height: 100%;
        background: var(--primary);
        border-radius: 4px;
    }
    .progress-info {
        display: flex;
        justify-content: space-between;
        font-size: 0.9rem;
        color: #6b7280;
    }
    .volunteering-actions {
        display: flex;
        gap: 0.8rem;
    }
    .volunteering-actions .btn {
        flex: 1;
        text-align: center;
        justify-content: center;
    }
    .btn-accent {
        background: var(--accent);
        color: white;
    }
    .btn-accent:hover {
        background: var(--accent-dark);
        transform: translateY(-2px);
    }
    @media (max-width: 900px) {
        .main-container {
            padding: 1.2rem 0.5rem;
        }
    }
    @media (max-width: 768px) {
        .volunteering-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
        .volunteering-grid {
            grid-template-columns: 1fr;
        }
        .volunteering-actions {
            flex-direction: column;
        }
    }

    /* NUEVOS ESTILOS PARA LA TARJETA DE VOLUNTARIADO DESTACADO */
    .action-card {
      background: #fff;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s;
      display: flex;
      flex-direction: column;
    }
    .action-card:hover {
      transform: translateY(-4px);
    }
    .action-image {
      position: relative;
      height: 180px;
      overflow: hidden;
    }
    .action-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s;
    }
    .action-card:hover .action-image img {
      transform: scale(1.1);
    }
    .action-badge {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: var(--primary);
      color: #fff;
      padding: 0.4rem 0.8rem;
      border-radius: 50px;
      font-size: 0.85rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.4rem;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }
    .action-content {
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      flex: 1;
    }
    .action-content h3 {
      font-size: 1.4rem;
      margin-bottom: 1rem;
      color: #2d3748;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .action-content h3 .action-icon {
      font-size: 1.2rem;
      color: var(--primary);
    }
    .action-content p {
      color: #4b5563;
      margin-bottom: 1.5rem;
      font-size: 0.95rem;
      line-height: 1.6;
      flex-grow: 1;
    }
    .action-stats {
      display: flex;
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }
    .stat-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: #6b7280;
      font-size: 0.9rem;
    }
    .stat-item i {
      color: var(--primary);
    }
    .action-button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.7rem 1.2rem;
      border-radius: 8px;
      font-size: 1rem;
      transition: background 0.3s, transform 0.3s;
      text-decoration: none;
    }
    .action-button.btn-primary {
      background: var(--primary);
      color: #fff;
    }
    .action-button.btn-primary:hover {
      background: var(--primary-dark);
      transform: translateY(-2px);
    }
    @media (max-width: 768px) {
      .action-card {
        flex-direction: row;
        gap: 1rem;
      }
      .action-image {
        height: 120px;
      }
      .action-content {
        padding: 1rem;
      }
      .action-content h3 {
        font-size: 1.2rem;
      }
      .action-button {
        padding: 0.6rem 1rem;
        font-size: 0.9rem;
      }
    }

    /* NUEVOS ESTILOS PARA LA SECCI√ìN DE INTRODUCCI√ìN A VOLUNTARIADOS */
    .volunteering-intro {
      background: linear-gradient(135deg, #f0f9ff 0%, #e6f0fa 100%);
      border-radius: 12px;
      padding: 2rem;
      margin-bottom: 2rem;
      border: 1px solid #e2e8f0;
    }
    .volunteering-intro h2 {
      font-size: 1.8rem;
      color: #166088;
      margin-bottom: 1rem;
      display: flex;
      align-items: center;
      gap: 0.8rem;
    }
    .volunteering-intro h2 i {
      color: #4fc3a1;
    }
    .volunteering-intro p {
      color: #4a6fa5;
      font-size: 1.1rem;
      line-height: 1.6;
    }

    /* ESTILOS PARA TARJETAS DE VOLUNTARIADO */
.volunteering-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    border: 1px solid var(--gray);
    display: flex;
    flex-direction: column;
}

.volunteering-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

.volunteering-image {
    height: 180px;
    overflow: hidden;
    position: relative;
}

.volunteering-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.volunteering-card:hover .volunteering-image img {
    transform: scale(1.05);
}

.volunteering-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: rgba(255, 255, 255, 0.9);
    padding: 0.3rem 0.8rem;
    border-radius: 50px;
    font-size: 0.8rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.volunteering-badge.urgent {
    background: var(--urgent);
    color: white;
}

.volunteering-badge.points {
    background: var(--primary);
    color: white;
    left: 1rem;
    right: auto;
}

.volunteering-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex: 1;
}

.volunteering-content h3 {
    font-size: 1.3rem;
    margin-bottom: 0.8rem;
    color: #2d3748;
}

.volunteering-content p {
    color: #6b7280;
    margin-bottom: 1.5rem;
    font-size: 0.95rem;
    line-height: 1.6;
    flex-grow: 1;
}

.volunteering-progress {
    margin-bottom: 1.5rem;
}

.progress-bar {
    height: 8px;
    background: var(--gray);
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 0.5rem;
}

.progress-fill {
    height: 100%;
    background: var(--primary);
    border-radius: 4px;
}

.progress-info {
    display: flex;
    justify-content: space-between;
    font-size: 0.9rem;
    color: #6b7280;
}

.volunteering-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
    font-size: 0.85rem;
    flex-wrap: wrap;
}

.volunteering-actions {
    display: flex;
    gap: 0.8rem;
}

.volunteering-actions .btn {
    flex: 1;
    text-align: center;
    justify-content: center;
}

/* MODAL DE VOLUNTARIADO */
.modal-volunteer-container {
    /* Estilos ya incluidos en el JavaScript */
}

.modal-volunteer-header {
    display: flex;
    gap: 2.5rem;
    margin-bottom: 2.7rem;
}

.modal-volunteer-image-wrapper {
    flex: 1;
    min-width: 320px;
    height: 300px;
    border-radius: 12px;
    overflow: hidden;
    position: relative;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
}

.modal-volunteer-info {
    flex: 1.5;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.modal-volunteer-meta-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.7rem 1.2rem;
    margin-bottom: 1.2rem;
}

.share-section {
    margin-top: 2rem;
}

.share-title {
    font-size: 1.3rem;
    font-weight: 600;
    color: var(--primary);
    margin-bottom: 1.5rem;
    text-align: center;
    margin-top: 2rem;
}

.share-content {
    background: #f8fafc;
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    position: relative;
}

.share-text {
    font-size: 1rem;
    line-height: 1.6;
    color: #4b5563;
    margin-bottom: 1rem;
}

.share-highlight {
    color: var(--primary);
    font-weight: 600;
}

.share-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
}

.share-btn {
    display: flex;
    align-items: center;
    gap: 0.7rem;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    color: white;
    transition: all 0.2s;
    text-decoration: none;
}

.share-btn-facebook {
    background: #3b5998;
}

.share-btn-twitter {
    background: #1da1f2;
}

.share-btn-whatsapp {
    background: #25d366;
}

.share-btn-link {
    background: var(--primary);
}

.share-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

/* NUEVAS CLASES Y ESTILOS PARA MIS ACTIVIDADES */
.activity-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 2rem;
}

.activity-card {
  background: #fff;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s;
  display: flex;
  flex-direction: column;
}

.activity-card:hover {
  transform: translateY(-4px);
}

.activity-image {
  position: relative;
  height: 180px;
  overflow: hidden;
}

.activity-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s;
}

.activity-card:hover .activity-image img {
  transform: scale(1.1);
}

.activity-badge {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: var(--primary);
  color: #fff;
  padding: 0.4rem 0.8rem;
  border-radius: 50px;
  font-size: 0.85rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.4rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.activity-content {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.activity-content h3 {
  font-size: 1.4rem;
  margin-bottom: 1rem;
  color: #2d3748;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.activity-content h3 .activity-icon {
  font-size: 1.2rem;
  color: var(--primary);
}

.activity-content p {
  color: #4b5563;
  margin-bottom: 1.5rem;
  font-size: 0.95rem;
  line-height: 1.6;
  flex-grow: 1;
}

.activity-stats {
  display: flex;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.stat-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #6b7280;
  font-size: 0.9rem;
}

.stat-item i {
  color: var(--primary);
}

.activity-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.7rem 1.2rem;
  border-radius: 8px;
  font-size: 1rem;
  transition: background 0.3s, transform 0.3s;
  text-decoration: none;
}

.activity-button.btn-primary {
  background: var(--primary);
  color: #fff;
}

.activity-button.btn-primary:hover {
  background: var(--primary-dark);
  transform: translateY(-2px);
}

@media (max-width: 768px) {
  .activity-card {
    flex-direction: row;
    gap: 1rem;
  }
  .activity-image {
    height: 120px;
  }
  .activity-content {
    padding: 1rem;
  }
  .activity-content h3 {
    font-size: 1.2rem;
  }
  .activity-button {
    padding: 0.6rem 1rem;
    font-size: 0.9rem;
  }
}

/* FIN NUEVAS CLASES Y ESTILOS PARA MIS ACTIVIDADES */
  </style>
{% endblock %}

{% block content %}
  <!-- Modal para usuarios no logueados -->
  <div class="modal-bg" id="loginModal">
    <div class="modal-content">
      <h3>Para crear un voluntariado</h3>
      <p>Debes ser un usuario registrado. ¬øDeseas iniciar sesi√≥n o registrarte ahora?</p>
      <div class="modal-buttons">
        <a href="/login?return=/volunteering" class="btn btn-primary">Iniciar Sesi√≥n</a>
        <a href="/register?return=/volunteering" class="btn btn-outline">Registrarse</a>
        <button id="cancelModal" class="btn">Cancelar</button>
      </div>
    </div>
  </div>

  <!-- Modal emergente para crear voluntariado -->
  <div id="createVolunteeringModal" class="modal-bg">
    <div class="modal-content">
      <button class="close-modal" id="closeCreateVolunteeringModal" title="Cerrar">&times;</button>
      <div class="create-volunteering-title">
        <i class="fas fa-plus-circle"></i> Crear Nueva Oportunidad de Voluntariado
      </div>
      <form class="volunteering-form" id="volunteeringForm" autocomplete="off">
        <div class="form-group">
          <label for="title">T√≠tulo del voluntariado</label>
          <input type="text" id="title" name="title" placeholder="Ej: Apoyo escolar a ni√±os" required>
        </div>
        <div class="form-group">
          <label for="summary">Resumen breve</label>
          <input type="text" id="summary" name="summary" maxlength="140" placeholder="Breve resumen del voluntariado (m√°x. 140 caracteres)" required>
        </div>
        <div class="form-group">
          <label for="description">Descripci√≥n detallada</label>
          <textarea id="description" name="description" placeholder="Describe el voluntariado, qu√© actividades se realizar√°n y qu√© se espera de los voluntarios..." required></textarea>
        </div>
        <div class="form-group">
          <label for="category">Tem√°tica</label>
          <select id="category" name="category" required>
            <option value="">Selecciona tem√°tica</option>
            <option value="medioambiente">Medio Ambiente</option>
            <option value="educacion">Educaci√≥n</option>
            <option value="salud">Salud</option>
            <option value="deportes">Deportes</option>
            <option value="animales">Animales</option>
            <option value="comunidad">Comunidad</option>
            <option value="otros">Otros</option>
          </select>
        </div>
        <div class="form-group">
          <label for="cause_id">Vinculado a causa (opcional)</label>
          <select id="cause-select" name="cause_id">
            <option value="">Selecciona una causa</option>
            <!-- Las opciones se cargan din√°micamente -->
          </select>
        </div>
        <div class="form-group">
          <label for="photo">Foto principal</label>
          <input type="file" id="photo" name="photo" accept="image/*">
          <img id="previewImg" class="preview-img" alt="Vista previa de la foto" style="display:none;">
        </div>
        <div class="form-inline-group">
          <div class="form-group">
            <label for="city">Ciudad</label>
            <input type="text" id="city" name="city" placeholder="Ej: Madrid" required>
          </div>
          <div class="form-group">
            <label for="country">Pa√≠s</label>
            <input type="text" id="country" name="country" placeholder="Ej: Espa√±a" required>
          </div>
        </div>
        <div class="form-group">
          <label for="points">Puntos por hora</label>
          <input type="number" id="points" name="points" min="1" max="1000" value="50" required>
          <div class="points-info" id="pointsText">
            <i class="fas fa-star"></i>
            Participar en este voluntariado otorgar√° <strong>50 puntos por hora</strong> a cada voluntario.
          </div>
        </div>
        <div class="form-group">
          <label for="beneficiaries">N¬∫ de beneficiarios</label>
          <input type="number" id="beneficiaries" name="beneficiaries" min="1" placeholder="Ej: 100" required>
        </div>
        <div class="form-group">
          <label for="volunteers_needed">Voluntarios necesarios</label>
          <input type="number" id="volunteers_needed" name="volunteers_needed" min="1" placeholder="Ej: 10" required>
        </div>
        <div class="form-group">
          <label for="is_urgent">
            <input type="checkbox" id="is_urgent" name="is_urgent"> Marcar como urgente
          </label>
        </div>
        <div class="form-inline-group">
          <div class="form-group">
            <label for="start_date">Fecha de inicio</label>
            <input type="date" id="start_date" name="start_date" required>
          </div>
          <div class="form-group">
            <label for="end_date">Fecha de finalizaci√≥n</label>
            <input type="date" id="end_date" name="end_date" required>
          </div>
        </div>
        <div class="form-group">
          <label for="schedule">Horario (opcional)</label>
          <input type="text" id="schedule" name="schedule" placeholder="Ej: Lunes a Viernes de 16:00 a 18:00">
        </div>
        <div class="form-group">
          <label for="skills_required">Habilidades requeridas (opcional)</label>
          <input type="text" id="skills_required" name="skills_required" placeholder="Ej: Docencia, Paciencia, etc.">
        </div>
        <input type="hidden" id="lat" name="lat">
        <input type="hidden" id="lng" name="lng">
        <button type="submit" class="btn btn-primary" style="margin-top:1rem;">
          <i class="fas fa-paper-plane"></i> Crear Voluntariado
        </button>
      </form>
      <div class="after-create" id="afterCreate" style="display:none;">
        <h3>¬°Voluntariado creado con √©xito!</h3>
        <p>¬øQuieres ver todas las oportunidades disponibles o crear otra?</p>
        <a href="/volunteering" class="btn btn-accent">
          <i class="fas fa-hands-helping"></i> Ver todos los voluntariados
        </a>
        <br>
        <a href="#" id="createAnother" class="btn btn-outline" style="margin-top:1rem;">
          <i class="fas fa-plus"></i> Crear otra oportunidad
        </a>
      </div>
    </div>
  </div>

  <!-- Modal de Voluntariado (detalle, opcional) -->
  <div id="volunteeringModal" class="modal" style="display:none; position:fixed; z-index:9999; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.35); align-items:center; justify-content:center;">
    <div class="modal-content" style="background:#fff; border-radius:18px; max-width:800px; width:95vw; padding:2rem; box-shadow:0 8px 32px rgba(74,111,165,0.13); position:relative; max-height:90vh; overflow-y:auto;">
      <button id="closeVolunteeringModal" style="position:absolute; top:1.5rem; right:1.5rem; background:none; border:none; font-size:1.8rem; color:#6b7280; cursor:pointer; transition:color 0.2s;" onmouseover="this.style.color='#4a6fa5'" onmouseout="this.style.color='#6b7280'">&times;</button>
      <div id="volunteeringModalBody" style="padding:0.5rem;">
        <!-- Contenido din√°mico -->
      </div>
    </div>
  </div>

  <!-- Modal de Causa (reutilizable) -->
  <div id="causeModal" class="modal-bg">
    <div class="modal-content" id="causeModalContent" style="max-width:500px;">
      <button class="close-modal" id="closeCauseModal" title="Cerrar">&times;</button>
      <div id="causeModalBody"></div>
    </div>
  </div>

  <!-- Contenido principal de la p√°gina de voluntariados -->
  <div class="main-container">

    <!-- Volunteering Intro Section: LLAMADA A LA ACCI√ìN -->
    <div class="volunteering-intro">
      <div class="volunteering-intro-content">
        <h2>
          <i class="fas fa-hands-helping"></i>
          ¬°Haz voluntariado y cambia vidas!
        </h2>
        <p>
          Descubre oportunidades de voluntariado, aporta tu tiempo y talento, suma impacto y vive experiencias √∫nicas ayudando a quienes m√°s lo necesitan. ¬°Cada acci√≥n solidaria cuenta!
        </p>
      </div>
    </div>

    <!-- T√≠tulo y bot√≥n crear voluntariado -->
    <div class="volunteering-header">
      <h1 class="main-title">
        Oportunidades de Voluntariado
      </h1>
      <a href="#" id="create-volunteering-btn" class="btn btn-primary">
        <i class="fas fa-plus"></i> Crear Voluntariado
      </a>
    </div>
    <div class="volunteering-search">
      <input type="text" id="search-input" placeholder="Buscar por t√≠tulo, pa√≠s, descripci√≥n...">
      <i class="fas fa-search" style="color:#4a6fa5;"></i>
    </div>
    <div class="tabs">
      <button class="tab active" data-filter="all">Todas</button>
      <button class="tab" data-filter="education">Educaci√≥n</button>
      <button class="tab" data-filter="health">Salud</button>
      <button class="tab" data-filter="environment">Medio Ambiente</button>
      <button class="tab" data-filter="animals">Animales</button>
      <button class="tab" data-filter="community">Comunidad</button>
      <button class="tab" data-filter="remote">Remotos</button>
    </div>
    <div class="volunteering-grid" id="volunteeringList">
      <!-- Los voluntariados se cargar√°n din√°micamente desde Supabase -->
    </div>
  </div>
{% endblock %}

{% block scripts %}
{{ super() }}
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
<script src="/js/share-system.js"></script>
<script src="/js/compartir.js"></script>
<script>
// Funci√≥n para compartir voluntariados (nueva, con preview)
window.mostrarCompartirVolunteering = function(volunteeringId) {
  window.universalShare('voluntariado', volunteeringId);
};

let currentFilter = "all";
let causeChoices = null;
let causesMap = {};

document.addEventListener('DOMContentLoaded', async function() {
  // Abrir modal de crear voluntariado
  document.getElementById('create-volunteering-btn').onclick = async function(e) {
    e.preventDefault();
    const { data: { session } } = await supabase.auth.getSession();
    if (session?.user) {
      await loadCausesForSelect();
      document.getElementById('createVolunteeringModal').classList.add('active');
      document.body.style.overflow = 'hidden';
    } else {
      document.getElementById('loginModal').classList.add('active');
    }
  };

  // Cerrar modal de crear voluntitario
  document.getElementById('closeCreateVolunteeringModal').onclick = function() {
    document.getElementById('createVolunteeringModal').classList.remove('active');
    document.body.style.overflow = '';
    document.getElementById('volunteeringForm').reset();
    document.getElementById('previewImg').style.display = 'none';
    document.getElementById('volunteeringForm').style.display = 'block';
    document.getElementById('afterCreate').style.display = 'none';
  };

  // Cerrar modal al hacer click fuera del contenido
  document.getElementById('createVolunteeringModal').onclick = function(e) {
    if (e.target === this) {
      this.classList.remove('active');
      document.body.style.overflow = '';
      document.getElementById('volunteeringForm').style.display = 'block';
      document.getElementById('afterCreate').style.display = 'none';
    }
  };

  // Modal login
  document.getElementById('cancelModal').onclick = function() {
    document.getElementById('loginModal').classList.remove('active');
  };
  document.getElementById('loginModal').onclick = function(e) {
    if (e.target === this) this.classList.remove('active');
  };

  // Tabs
  document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function() {
      document.querySelector('.tab.active').classList.remove('active');
      this.classList.add('active');
      loadVolunteeringFromSupabase(this.getAttribute('data-filter'));
    });
  });

  // B√∫squeda
  document.getElementById('search-input').addEventListener('input', function() {
    loadVolunteeringFromSupabase(currentFilter, this.value);
  });

  // Vista previa de imagen
  document.getElementById('photo').addEventListener('change', function(e) {
    const file = e.target.files[0];
    const preview = document.getElementById('previewImg');
    if (file) {
      const reader = new FileReader();
      reader.onload = function(evt) {
        preview.src = evt.target.result;
        preview.style.display = 'block';
      };
      reader.readAsDataURL(file);
    } else {
      preview.src = '';
      preview.style.display = 'none';
    }
  });

  // Actualizar texto de puntos
  document.getElementById('points').addEventListener('input', function() {
    const val = this.value || 0;
    document.getElementById('pointsText').innerHTML = `<i class="fas fa-star"></i> Participar en este voluntariado otorgar√° <strong>${val} puntos por hora</strong> a cada voluntario.`;
  });

  // Crear otro voluntariado tras √©xito
  document.getElementById('createAnother').onclick = function(e) {
    e.preventDefault();
    document.getElementById('volunteeringForm').reset();
    document.getElementById('previewImg').style.display = 'none';
    document.getElementById('volunteeringForm').style.display = 'block';
    document.getElementById('afterCreate').style.display = 'none';
  };

  // Env√≠o del formulario
  document.getElementById('volunteeringForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    // Recoge los datos del formulario
    const title = document.getElementById('title').value.trim();
    const summary = document.getElementById('summary').value.trim();
    const description = document.getElementById('description').value.trim();
    const category = document.getElementById('category').value;
    const city = document.getElementById('city').value.trim();
    const country = document.getElementById('country').value.trim();
    const points = parseInt(document.getElementById('points').value, 10);
    const beneficiaries = parseInt(document.getElementById('beneficiaries').value, 10);
    const volunteers_needed = parseInt(document.getElementById('volunteers_needed').value, 10);
    const is_urgent = document.getElementById('is_urgent').checked;
    const cause_id = document.getElementById('cause-select').value || null;
    const photoFile = document.getElementById('photo').files[0];
    const start_date = document.getElementById('start_date').value;
    const end_date = document.getElementById('end_date').value;
    const schedule = document.getElementById('schedule').value.trim();
    const skills_required = document.getElementById('skills_required').value.trim();
    let photo_url = null;

    // Sube la foto a Supabase Storage si existe
    if (photoFile) {
      const fileExt = photoFile.name.split('.').pop();
      const fileName = `${Date.now()}-${Math.random().toString(36).substr(2, 9)}.${fileExt}`;
      const filePath = `public/${fileName}`;
      const { error: uploadError } = await supabase.storage
        .from('volunteering')
        .upload(filePath, photoFile, { upsert: true });
      if (uploadError) {
        alert('Error subiendo la foto: ' + uploadError.message);
        return;
      }
      const { data } = supabase.storage.from('volunteering').getPublicUrl(filePath);
      photo_url = data.publicUrl;
    }

    // Guarda el voluntariado en la tabla
    const { data: { session } } = await supabase.auth.getSession();
    const user = session?.user;
    if (!user) {
      alert('Debes iniciar sesi√≥n para crear un voluntariado.');
      return;
    }

    const lat = document.getElementById('lat').value;
    const lng = document.getElementById('lng').value;

    const datosVoluntariado = {
      title,
      summary,
      description,
      category,
      city,
      country,
      points,
      beneficiaries,
      volunteers_needed,
      is_urgent,
      photo_url,
      user_id: user.id,
      volunteers: 0,
      cause_id,
      start_date,
      end_date,
      schedule,
      skills_required,
      lat: lat ? parseFloat(lat) : null,
      lng: lng ? parseFloat(lng) : null,
    };

    const { data: newVol, error: volError } = await supabase
      .from('volunteering')
      .insert([{ ...datosVoluntariado, user_id: user.id }])
      .select()
      .single();

    if (!volError && newVol) {
      await supabase
        .from('volunteering_members')
        .insert([{ volunteering_id: newVol.id, user_id: user.id, role: 'founder', status: 'active' }]);
    }

    document.getElementById('volunteeringForm').style.display = 'none';
    document.getElementById('afterCreate').style.display = 'block';
    loadVolunteeringFromSupabase();
  });

  // Hacer showVolunteeringModal accesible globalmente
  window.showVolunteeringModal = showVolunteeringModal;

  // Detectar URL espec√≠fica y abrir modal
  setTimeout(() => {
    const urlPath = window.location.pathname;
    const match = urlPath.match(/\/(volunteering|voluntariado)\/([^\/]+)$/);
    if (match) {
      const id = match[2];
      console.log('üéØ URL detectada:', id);
      setTimeout(() => {
        if (window.volunteering && window.volunteering.length > 0) {
          const found = window.volunteering.find(v => v.id === id);
          if (found) {
            showVolunteeringModal(id);
          } else {
            window.location.href = '/volunteering';
          }
        } else {
          setTimeout(arguments.callee, 1000);
        }
      }, 2000);
    }
  }, 1000);

  // Cargar voluntariados al iniciar
  await loadCausesMap();
  await loadVolunteeringFromSupabase();
});

// ‚úÖ AGREGAR esta configuraci√≥n corregida:
document.addEventListener('DOMContentLoaded', function() {
  // Cerrar modal con bot√≥n X
  const closeBtn = document.getElementById('closeVolunteeringModal');
  if (closeBtn) {
    closeBtn.addEventListener('click', function() {
      document.getElementById('volunteeringModal').style.display = 'none';
      document.body.style.overflow = '';
      
      // Limpiar URL cuando se cierra el modal
      if (window.location.pathname.includes('/volunteering/') && window.location.pathname !== '/volunteering') {
        window.history.pushState({}, '', '/volunteering');
      }
      if (window.location.pathname.includes('/voluntariado/') && window.location.pathname !== '/volunteering') {
        window.history.pushState({}, '', '/volunteering');
      }
    });
  }

  // Click fuera del modal para cerrar
  const modal = document.getElementById('volunteeringModal');
  if (modal) {
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        this.style.display = 'none';
        document.body.style.overflow = '';
        
        // Limpiar URL cuando se cierra el modal
        if (window.location.pathname.includes('/volunteering/') && window.location.pathname !== '/volunteering') {
          window.history.pushState({}, '', '/volunteering');
        }
        if (window.location.pathname.includes('/voluntariado/') && window.location.pathname !== '/volunteering') {
          window.history.pushState({}, '', '/volunteering');
        }
      }
    });
  }
});

async function loadVolunteeringFromSupabase(filter = "all", searchTerm = "") {
  currentFilter = filter;
  let query = supabase
    .from('volunteering')
    .select('*')
    .order('created_at', { ascending: false });

  if (filter !== "all") {
    query = query.eq('category', filter);
  }
  if (searchTerm && searchTerm.trim() !== "") {
    query = query.or(`title.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%,city.ilike.%${searchTerm}%,country.ilike.%${searchTerm}%`);
  }
  const { data: volunteering, error } = await query;
  const volunteeringList = document.getElementById('volunteeringList');
  if (error) {
    volunteeringList.innerHTML = '<div style="color:#e53e3e;text-align:center;">Error al cargar los voluntariados.</div>';
    return;
  }
  volunteeringList.innerHTML = '';
  if (!volunteering || volunteering.length === 0) {
    volunteeringList.innerHTML = '<div style="color:#6b7280;text-align:center;padding:2rem;grid-column:1/-1;">No se encontraron oportunidades de voluntariado.</div>';
    return;
  }

  // Guardar los voluntariados en una variable global para acceder desde el modal
  window.volunteering = volunteering;

  // 1. Obt√©n el usuario actual y sus voluntariados activos
  let userId = null;
  let joinedIds = [];
  const { data: { session } } = await supabase.auth.getSession();
  if (session?.user) {
    userId = session.user.id;
    const { data: memberships } = await supabase
      .from('volunteering_members')
      .select('volunteering_id')
      .eq('user_id', userId)
      .eq('status', 'active');
    joinedIds = memberships ? memberships.map(m => m.volunteering_id) : [];
  }

  // Usar causesMap global ya cargado
  volunteering.forEach(volunteer => {
    const urgentBadge = volunteer.is_urgent ? `<div class="volunteering-badge urgent"><i class="fas fa-exclamation-circle"></i> Urgente</div>` : "";
    const pointsBadge = `<div class="volunteering-badge points"><i class="fas fa-star"></i> +${volunteer.points || 0} pts/h</div>`;
    const location = volunteer.city && volunteer.country ? `${volunteer.city}, ${volunteer.country}` : "";
    const startDate = volunteer.start_date ? new Date(volunteer.start_date).toLocaleDateString('es-ES', { day: 'numeric', month: 'short' }) : '';
    const endDate = volunteer.end_date ? new Date(volunteer.end_date).toLocaleDateString('es-ES', { day: 'numeric', month: 'short' }) : '';
    const beneficiariesHtml = volunteer.beneficiaries
      ? `<div class="beneficiaries-count" style="color:var(--primary);">
          <i class="fas fa-heart"></i> Beneficia a ${volunteer.beneficiaries} personas
        </div>`
      : '';

    // ¬øYa participa el usuario?
    const isJoined = joinedIds.includes(volunteer.id);

    // Cargar informaci√≥n de la causa si existe
    let causeHtml = '';
    if (volunteer.cause_id && causesMap[volunteer.cause_id]) {
      const cause = causesMap[volunteer.cause_id];
      causeHtml = `
        <div class="linked-cause">
          <i class="fas fa-link"></i>
          <img src="${cause.photo_url || '/img/causa-default.jpg'}"
               alt="Causa vinculada">
          <span>${cause.title}</span>
        </div>
      `;
    }

    const progress = Math.min(Math.round((volunteer.volunteers / volunteer.volunteers_needed) * 100), 100);

    const card = document.createElement('div');
    card.className = 'volunteering-card';
    card.innerHTML = `
  <div class="volunteering-image">
    <img src="${volunteer.photo_url || '/img/volunteer-default.jpg'}" alt="${volunteer.title}" onerror="this.src='/img/volunteer-default.jpg'">
    ${urgentBadge}
    ${pointsBadge}
  </div>
  <div class="volunteering-content">
    <h3>${volunteer.title}</h3>
    <p>${volunteer.summary || ''}</p>
    ${causeHtml}
    <div class="volunteering-progress">
      <div class="progress-bar">
        <div class="progress-fill" style="width:${progress || 0}%"></div>
      </div>
      <div class="progress-info">
        <span>${progress || 0}% completado</span>
        <span>${volunteer.volunteers || 0} de ${volunteer.volunteers_needed || 0} voluntarios</span>
      </div>
    </div>
    <div class="volunteering-meta">
      <div class="meta-item"><i class="fas fa-map-marker-alt"></i> ${location}</div>
      <div class="meta-item"><i class="fas fa-calendar-alt"></i> ${startDate} - ${endDate}</div>
      <div class="meta-item"><i class="fas fa-heart"></i> ${volunteer.beneficiaries || 0} beneficiarios</div>
    </div>
    <div class="volunteering-actions">
      <button class="btn btn-primary view-volunteer-btn" data-volunteer-id="${volunteer.id}">
        <i class="fas fa-eye"></i> Ver m√°s
      </button>
      <button class="btn btn-accent" onclick="mostrarCompartirVolunteering('${volunteer.id}')">
        <i class="fas fa-share-alt"></i> Compartir
      </button>
    </div>
  </div>
`;
    volunteeringList.appendChild(card);
  });

  // Listeners para los botones
  document.querySelectorAll('.view-volunteer-btn').forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      const volunteerId = this.getAttribute('data-volunteer-id');
      showVolunteeringModal(volunteerId);
    });
  });
  document.querySelectorAll('.join-btn').forEach(btn => {
    btn.addEventListener('click', async function(e) {
      e.preventDefault();
      const volunteerId = this.getAttribute('data-volunteer-id');
      await joinVolunteering(volunteerId, this);
    });
  });
}

// Funci√≥n para mostrar el modal con los detalles del voluntariado
async function showVolunteeringModal(volunteerId) {
  const { data: volunteer, error } = await supabase
    .from('volunteering')
    .select('*')
    .eq('id', volunteerId)
    .single();

  if (error) {
    alert('Error al cargar el voluntariado: ' + error.message);
    return;
  }

  const progress = Math.min(Math.round((volunteer.volunteers / volunteer.volunteers_needed) * 100), 100);
  const createdDate = new Date(volunteer.created_at).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });
  const startDate = new Date(volunteer.start_date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });
  const endDate = new Date(volunteer.end_date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });

  // Obtener informaci√≥n de la causa vinculada si existe
  let causeInfo = '';
  if (volunteer.cause_id) {
    const { data: cause } = await supabase
      .from('causes')
      .select('title, short_description, photo_url')
      .eq('id', volunteer.cause_id)
      .single();

    if (cause) {
      causeInfo = `
        <div class="linked-cause-section" style="margin-bottom:1.5rem;">
          <h3 class="content-title" style="font-size:1.2rem; font-weight:600; color:var(--primary); margin-bottom:0.9rem; display:flex; align-items:center; gap:0.7rem;">
            <i class="fas fa-link"></i> Vinculado a la causa
          </h3>
          <div style="display:flex; align-items:center; gap:1.2rem; background:#f8fafc; padding:1rem; border-radius:8px; border:1px solid #e5e7eb;">
            <img src="${cause.photo_url || '/img/causa-default.jpg'}" 
                 alt="Imagen de la causa vinculada"
                 style="width:80px; height:80px; object-fit:cover; border-radius:6px;"
                 onerror="this.src='/img/causa-default.jpg'">
            <div style="flex:1; min-width:0;">
              <div style="font-weight:700; color:var(--primary); font-size:1.05rem; margin-bottom:0.2rem; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">
                ${cause.title}
              </div>
              <div style="color:#6b7280; font-size:0.97rem; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; max-width:260px;">
                ${cause.short_description || 'Sin resumen disponible'}
              </div>
            </div>
            <a href="/causes/${volunteer.cause_id}"
               class="btn btn-primary"
               style="margin-left:1.2rem; white-space:nowrap; font-size:0.97rem; padding:0.5rem 1.1rem; display:flex; align-items:center; gap:0.5rem;"
               onclick="showCauseModal('${volunteer.cause_id}'); return false;">
              <i class="fas fa-arrow-right"></i> Ver causa
            </a>
          </div>
        </div>
      `;
    }
  }

  document.getElementById('volunteeringModalBody').innerHTML = `
    <div class="modal-volunteer-container">
      <h1 class="modal-volunteer-title" style="font-size:2rem; font-weight:800; color:var(--primary); margin-bottom:2.7rem; text-align:center; width:100%;">${volunteer.title}</h1>
      <div class="modal-volunteer-header" style="display:flex; gap:2.5rem; margin-bottom:2.7rem;">
        <div class="modal-volunteer-image-wrapper" style="flex:1; min-width:320px; height:300px; border-radius:12px; overflow:hidden; position:relative; box-shadow:0 4px 12px rgba(0,0,0,0.08);">
          <div class="modal-cause-badge" style="top:1.2rem; left:1.2rem; right:auto; background:var(--accent); color:white; position:absolute; border-radius:50px; padding:0.5rem 1rem; font-size:0.9rem; font-weight:600; display:flex; align-items:center; gap:0.6rem; box-shadow:0 2px 8px rgba(0,0,0,0.1); z-index:2;">
            <i class="fas fa-hands-helping"></i> Voluntariado
          </div>
          <img class="modal-volunteer-image" src="${volunteer.photo_url || '/img/volunteer-default.jpg'}" 
               alt="Imagen del voluntariado ${volunteer.title}"
               style="width:100%;height:100%;object-fit:cover;"
               onerror="this.src='/img/volunteer-default.jpg'">
          ${volunteer.is_urgent ? `
          <div class="modal-cause-badge urgent" style="right:1.2rem; left:auto; top:1.2rem; background:var(--urgent); color:white; border-radius:50px; padding:0.5rem 1rem; font-size:0.9rem; font-weight:600; display:flex; align-items:center; gap:0.6rem; box-shadow:0 2px 8px rgba(0,0,0,0.1); z-index:2;">
            <i class="fas fa-exclamation-circle"></i> Urgente
          </div>` : ''}
        </div>
        <div class="modal-volunteer-info" style="flex:1.5; display:flex; flex-direction:column; justify-content:flex-start;">
          <div class="modal-cause-progress-container" style="background:#f8fafc; padding:1.5rem; border-radius:12px; margin-bottom:1.5rem; border:1px solid #e5e7eb;">
            <div class="progress-bar">
              <div class="progress-fill" style="width: ${progress}%"></div>
            </div>
            <div class="progress-info">
              <span>${progress}% completado</span>
              <span>${volunteer.volunteers || 0} de ${volunteer.volunteers_needed || 0} voluntarios</span>
            </div>
          </div>
          <div class="modal-volunteer-meta-grid" style="display:grid; grid-template-columns:1fr 1fr; gap:0.7rem 1.2rem; margin-bottom:1.2rem;">
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-tag"></i></span>
              <span>${getCategoryName(volunteer.category)}</span>
            </div>
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-map-marker-alt"></i></span>
              <span>${volunteer.city || 'Sin ubicaci√≥n'}${volunteer.country ? ', ' + volunteer.country : ''}</span>
            </div>
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-users"></i></span>
              <span>${volunteer.volunteers || 0} voluntarios</span>
            </div>
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-heart"></i></span>
              <span>${volunteer.beneficiaries || 0} beneficiarios</span>
            </div>
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-calendar-alt"></i></span>
              <span>${startDate} - ${endDate}</span>
            </div>
            ${volunteer.schedule ? `
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-clock"></i></span>
              <span>${volunteer.schedule}</span>
            </div>` : ''}
            ${volunteer.skills_required ? `
            <div class="meta-item">
              <span class="meta-icon"><i class="fas fa-lightbulb"></i></span>
              <span>${volunteer.skills_required}</span>
            </div>` : ''}
          </div>
          <div class="points-notice" style="background:#f0f9ff; border-left:4px solid var(--accent); padding:0.8rem; border-radius:0 8px 8px 0; font-size:0.97rem; display:flex; align-items:center; gap:0.7rem;">
            <i class="fas fa-star" style="color: var(--accent);"></i>
            Participar en este voluntariado otorgar√° <strong>${volunteer.points || 20} puntos</strong> de impacto
          </div>
        </div>
      </div>
      ${causeInfo}
      <div class="modal-volunteer-content" style="margin-top:0;">
        <div class="content-section" style="margin-bottom:2.2rem;">
          <h3 class="content-title" style="font-size:1.2rem; font-weight:600; color:var(--primary); margin-bottom:0.9rem; display:flex; align-items:center; gap:0.7rem;">
            <i class="fas fa-align-left"></i> Resumen
          </h3>
          <p class="content-text">${volunteer.summary || 'Sin resumen.'}</p>
        </div>
        <div class="content-section" style="margin-bottom:2.2rem;">
          <h3 class="content-title" style="font-size:1.2rem; font-weight:600; color:var(--primary); margin-bottom:0.9rem; display:flex; align-items:center; gap:0.7rem;">
            <i class="fas fa-align-left"></i> Descripci√≥n
          </h3>
          <p class="content-text">${volunteer.description || 'No hay descripci√≥n disponible para este voluntariado.'}</p>
        </div>
        <div class="content-section" style="margin-bottom:2.2rem;">
          <h3 class="content-title" style="font-size:1.2rem; font-weight:600; color:var(--primary); margin-bottom:0.9rem; display:flex; align-items:center; gap:0.7rem;">
            <i class="fas fa-info-circle"></i> Detalles adicionales
          </h3>
          <div style="display:grid; grid-template-columns:1fr 1fr; gap:1rem;">
            <div>
              <p style="font-weight:600; color:#4b5563; margin-bottom:0.3rem;">Fecha de creaci√≥n</p>
              <p style="color:#6b7280;">${createdDate}</p>
            </div>
            <div>
              <p style="font-weight:600; color:#4b5563; margin-bottom:0.3rem;">Estado</p>
              <p style="color:#6b7280;">${new Date(volunteer.end_date) > new Date() ? 'Activo' : 'Finalizado'}</p>
            </div>
            <div>
              <p style="font-weight:600; color:#4b5563; margin-bottom:0.3rem;">Prioridad</p>
              <p style="color:#6b7280;">${volunteer.is_urgent ? 'Alta prioridad' : 'Prioridad normal'}</p>
            </div>
            <div>
              <p style="font-weight:600; color:#4b5563; margin-bottom:0.3rem;">Plazas disponibles</p>
              <p style="color:#6b7280;">${volunteer.volunteers_needed - volunteer.volunteers} de ${volunteer.volunteers_needed}</p>
            </div>
          </div>
        </div>
      </div>
      <div class="volunteering-actions" style="display:flex; gap:0.8rem; margin-top:2.2rem;">
        <button class="btn btn-primary" style="flex:1;" onclick="joinVolunteering('${volunteer.id}')">
          <i class="fas fa-handshake"></i> Unirme como voluntario
        </button>
        <button class="btn btn-accent" style="flex:1;" onclick="mostrarCompartirVolunteering('${volunteer.id}')">
          <i class="fas fa-share-alt"></i> Compartir
        </button>
      </div>
      <div class="share-section" id="shareSection"></div>
    </div>
  `;

  document.getElementById('volunteeringModal').style.display = 'flex';
  document.body.style.overflow = 'hidden';
}

// Funci√≥n para mostrar opciones de compartir para voluntariados
function showShareOptionsVolunteer(volunteerId) {
  const volunteer = window.volunteering.find(v => v.id == volunteerId);
  const shareSection = document.getElementById('shareSectionVolunteer');
  shareSection.innerHTML = `
    <h3 class="share-title">
      <i class="fas fa-share-alt"></i> Ayuda a difundir este voluntariado
    </h3>
    <div class="share-content">
      <p class="share-text">
        <span class="share-highlight">"${volunteer.description ? volunteer.description.substring(0, 120) + '...' : '√önete a esta importante oportunidad de voluntariado'}"</span><br><br>
        Cada voluntario nos acerca m√°s a la meta de ayudar a <strong>${volunteer.beneficiaries || 0} personas</strong>.
      </p>
      <div class="share-buttons">
        <a href="#" class="share-btn share-btn-facebook" onclick="shareOnSocialVolunteer('facebook', '${volunteer.id}')">
          <i class="fab fa-facebook-f"></i> Facebook
        </a>
        <a href="#" class="share-btn share-btn-twitter" onclick="shareOnSocialVolunteer('twitter', '${volunteer.id}')">
          <i class="fab fa-twitter"></i> Twitter
        </a>
        <a href="#" class="share-btn share-btn-whatsapp" onclick="shareOnSocialVolunteer('whatsapp', '${volunteer.id}')">
          <i class="fab fa-whatsapp"></i> WhatsApp
        </a>
        <a href="#" class="share-btn share-btn-link" onclick="copyVolunteerLink('${volunteer.id}')">
          <i class="fas fa-link"></i> Copiar enlace
        </a>
      </div>
    </div>
  `;
  shareSection.scrollIntoView({ behavior: 'smooth' });
}

// Funci√≥n para compartir voluntariados en redes sociales
function shareOnSocialVolunteer(platform, volunteerId) {
  const volunteer = window.volunteering.find(v => v.id == volunteerId);
  const url = `${window.location.origin}/volunteering/${volunteer.id}`;
  const text = `√önete a este voluntariado: "${volunteer.title}" - ${volunteer.description ? volunteer.description.substring(0, 100) + '...' : 'Ayuda a hacer la diferencia!'} ${url}`;
  let shareUrl;
  switch(platform) {
    case 'facebook':
      shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}&quote=${encodeURIComponent(text)}`;
      break;
    case 'twitter':
      shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;
      break;
    case 'whatsapp':
      shareUrl = `https://wa.me/?text=${encodeURIComponent(text)}`;
      break;
    default:
      return;
  }
  window.open(shareUrl, '_blank', 'width=600,height=400');
}

// Funci√≥n para copiar enlace del voluntariado
function copyVolunteerLink(volunteerId) {
  const url = `${window.location.origin}/volunteering/${volunteerId}`;
  navigator.clipboard.writeText(url).then(() => {
    alert('¬°Enlace copiado!');
  }).catch(() => {
    prompt('Por favor, copia este enlace:', url);
  });
}

// Ejemplo de funci√≥n para unirse a voluntariado
async function joinVolunteering(volunteeringId, btn = null) {
  const { data: { session } } = await supabase.auth.getSession();
  if (!session?.user) {
    document.getElementById('loginModal').classList.add('active');
    return;
  }
  const userId = session.user.id;

  // Evita duplicados
  const { data: existing } = await supabase
    .from('volunteering_members')
    .select('id')
    .eq('volunteering_id', volunteeringId)
    .eq('user_id', userId)
    .maybeSingle();

  if (existing) {
    alert('Ya eres voluntario en esta oportunidad.');
    if (btn) {
      btn.textContent = "Ya eres voluntario";
      btn.disabled = true;
      btn.style.opacity = "0.7";
      btn.style.cursor = "not-allowed";
    }
    return;
  }

  const { error } = await supabase
    .from('volunteering_members')
    .insert([{ volunteering_id: volunteeringId, user_id: userId, role: 'member', status: 'active' }]);

  if (error) {
    alert('Error al unirte: ' + error.message);
    return;
  }

  if (btn) {
    btn.textContent = "Ya eres voluntario";
    btn.disabled = true;
    btn.style.opacity = "0.7";
    btn.style.cursor = "not-allowed";
  }

  alert('¬°Ahora eres voluntario en esta oportunidad!');
}

// Cargar causas en el select al abrir el modal de crear voluntariado
async function loadCausesForSelect() {
  const select = document.getElementById('cause-select');
  if (causeChoices) {
    causeChoices.destroy();
    causeChoices = null;
  }
  select.innerHTML = '<option value="">Selecciona una causa</option>';
  const { data: causes, error } = await supabase.from('causes').select('id, title');
  if (error) {
    alert('Error cargando causas: ' + error.message);
    return;
  }
  if (causes && causes.length > 0) {
    causes.forEach(cause => {
      const option = document.createElement('option');
      option.value = cause.id;
      option.textContent = cause.title;
      select.appendChild(option);
    });
  }
  causeChoices = new Choices(select, {
    searchEnabled: true,
    itemSelectText: '',
    shouldSort: false,
    placeholder: true,
    placeholderValue: 'Selecciona una causa',
    removeItemButton: true,
    noResultsText: 'No se encontraron causas',
  });
}

// Geocodificaci√≥n autom√°tica al cambiar ciudad o pa√≠s
async function geocodeCityCountry() {
  const city = document.getElementById('city').value.trim();
  const country = document.getElementById('country').value.trim();
  if (!city || !country) return;

  const query = encodeURIComponent(`${city}, ${country}`);
  const url = `https://nominatim.openstreetmap.org/search?q=${query}&format=json&limit=1`;

  try {
    const res = await fetch(url, { headers: { 'Accept-Language': 'es' } });
    const data = await res.json();
    if (data && data.length > 0) {
      document.getElementById('lat').value = data[0].lat;
      document.getElementById('lng').value = data[0].lon;
    } else {
      document.getElementById('lat').value = '';
      document.getElementById('lng').value = '';
    }
  } catch (e) {
    document.getElementById('lat').value = '';
    document.getElementById('lng').value = '';
  }
}

document.getElementById('city').addEventListener('change', geocodeCityCountry);
document.getElementById('country').addEventListener('change', geocodeCityCountry);

// A√±ade esta funci√≥n auxiliar para mostrar el nombre de la tem√°tica:
function getCategoryName(category) {
  const categories = {
    'medioambiente': 'Medio Ambiente',
    'educacion': 'Educaci√≥n',
    'salud': 'Salud',
    'deportes': 'Deportes',
    'animales': 'Animales',
    'comunidad': 'Comunidad',
    'otros': 'Otros'
  };
  return categories[category] || 'General';
}

// --- MODAL DE CAUSA REUTILIZABLE PARA VOLUNTARIADOS Y TAREAS ---

// Funci√≥n para mostrar el modal de causa
async function showCauseModal(causeId) {
  const { data: cause, error } = await supabase
    .from('causes')
    .select('*')
    .eq('id', causeId)
    .single();

  if (error || !cause) {
    alert('No se pudo cargar la causa.');
    return;
  }

  document.getElementById('causeModalBody').innerHTML = `
    <h2 style="color:var(--primary);margin-bottom:1rem;">${cause.title}</h2>
    <img src="${cause.photo_url || '/img/causa-default.jpg'}" alt="${cause.title}" style="width:100%;max-width:320px;border-radius:8px;margin-bottom:1rem;">
    <p style="color:#4b5563;">${cause.description || 'Sin descripci√≥n.'}</p>
  `;
  document.getElementById('causeModal').classList.add('active');
  document.body.style.overflow = 'hidden';
}

document.getElementById('closeCauseModal').onclick = function() {
  document.getElementById('causeModal').classList.remove('active');
  document.body.style.overflow = '';
};
document.getElementById('causeModal').onclick = function(e) {
  if (e.target === this) {
    this.classList.remove('active');
    document.body.style.overflow = '';
  }
};

async function loadCausesMap() {
  const { data: causes } = await supabase.from('causes').select('id, title, photo_url');
  if (causes) {
    causesMap = {};
    causes.forEach(c => {
      causesMap[c.id] = {
        title: c.title,
        photo_url: c.photo_url
      };
    });
  }
}

// Funci√≥n para renderizar voluntariados con el mismo dise√±o que index.njk
function renderVolunteering(volunteering) {
  const container = document.createElement('div');
  container.className = 'activity-grid';
  
  volunteering.forEach(volunteer => {
    const urgentBadge = volunteer.is_urgent ? 
      `<div class="volunteering-badge urgent"><i class="fas fa-exclamation-circle"></i> Urgente</div>` : "";
    const pointsBadge = `<div class="volunteering-badge points"><i class="fas fa-star"></i> +${volunteer.points || 0} pts/h</div>`;
    const location = volunteer.city && volunteer.country ? `${volunteer.city}, ${volunteer.country}` : "";
    const startDate = volunteer.start_date ? new Date(volunteer.start_date).toLocaleDateString('es-ES', { day: 'numeric', month: 'short' }) : '';
    const endDate = volunteer.end_date ? new Date(volunteer.end_date).toLocaleDateString('es-ES', { day: 'numeric', month: 'short' }) : '';

    // Cargar informaci√≥n de la causa si existe
    let causeHtml = '';
    if (volunteer.cause_id && window.causesMap && window.causesMap[volunteer.cause_id]) {
      const cause = window.causesMap[volunteer.cause_id];
      causeHtml = `
        <div class="linked-cause">
          <i class="fas fa-link"></i>
          <img src="${cause.photo_url || '/img/causa-default.jpg'}"
               alt="Causa vinculada">
          <span>${cause.title}</span>
        </div>
      `;
    }

    const card = document.createElement('div');
    card.className = 'volunteering-card';
    card.innerHTML = `
      <div class="volunteering-image">
        <img src="${volunteer.photo_url || '/img/volunteer-default.jpg'}" alt="${volunteer.title}" onerror="this.src='/img/volunteer-default.jpg'">
        ${urgentBadge}
        ${pointsBadge}
      </div>
      <div class="volunteering-content">
        <h3>${volunteer.title}</h3>
        <p>${volunteer.summary || ''}</p>
        ${causeHtml}
        <div class="volunteering-meta">
          <div class="meta-item"><i class="fas fa-map-marker-alt"></i> ${location}</div>
          <div class="meta-item"><i class="fas fa-calendar-alt"></i> ${startDate} - ${endDate}</div>
          <div class="meta-item"><i class="fas fa-heart"></i> ${volunteer.beneficiaries || 0} beneficiarios</div>
        </div>
        <div class="volunteering-actions">
          <button class="btn btn-primary view-volunteer-btn" data-volunteer-id="${volunteer.id}">
            <i class="fas fa-eye"></i> Ver m√°s
          </button>
          <button class="btn btn-accent" onclick="mostrarCompartirVolunteering('${volunteer.id}')">
            <i class="fas fa-share-alt"></i> Compartir
          </button>
        </div>
      </div>
    `;
    container.appendChild(card);
  });

  // Agregar event listeners
  container.querySelectorAll('.view-volunteer-btn').forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      const volunteerId = this.getAttribute('data-volunteer-id');
      showVolunteeringModal(volunteerId);
    });
  });

  return container;
}
</script>
{% endblock %}